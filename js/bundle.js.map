{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./node_modules/gl-matrix/esm/common.js","webpack:///./node_modules/gl-matrix/esm/mat4.js","webpack:///./node_modules/gl-matrix/esm/vec2.js","webpack:///./node_modules/gl-matrix/esm/vec3.js","webpack:///./src/SVDAG.ts","webpack:///./src/Camera.ts","webpack:///./src/ShaderUtils.ts","webpack:///./src/Renderer.ts","webpack:///./src/OrbitController.ts","webpack:///./src/SceneProvider.ts","webpack:///./src/main.ts"],"names":["installedModules","__webpack_require__","moduleId","exports","module","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","prototype","hasOwnProperty","p","s","EPSILON","ARRAY_TYPE","Float32Array","Array","RANDOM","Math","random","PI","out","clone","a","copy","fromValues","m00","m01","m02","m03","m10","m11","m12","m13","m20","m21","m22","m23","m30","m31","m32","m33","set","identity","transpose","a01","a02","a03","a12","a13","a23","invert","a00","a10","a11","a20","a21","a22","a30","a31","a32","a33","b00","b01","b02","b03","b04","b05","b06","b07","b08","b09","b10","b11","det","adjoint","determinant","multiply","b","b0","b1","b2","b3","translate","v","x","y","z","rotate","rad","axis","b12","b20","b21","b22","len","hypot","sin","cos","rotateX","rotateY","rotateZ","fromTranslation","fromScaling","fromRotation","fromXRotation","fromYRotation","fromZRotation","fromRotationTranslation","q","w","x2","y2","z2","xx","xy","xz","yy","yz","zz","wx","wy","wz","fromQuat2","translation","bx","by","bz","bw","ax","ay","az","aw","magnitude","getTranslation","mat","getScaling","getRotation","scaling","is1","is2","is3","sm11","sm12","sm13","sm21","sm22","sm23","sm31","sm32","sm33","trace","S","sqrt","fromRotationTranslationScale","sx","sy","sz","fromRotationTranslationScaleOrigin","ox","oy","oz","out0","out1","out2","out4","out5","out6","out8","out9","out10","fromQuat","yx","zx","zy","frustum","left","right","bottom","top","near","far","rl","tb","nf","perspective","fovy","aspect","f","tan","Infinity","perspectiveFromFieldOfView","fov","upTan","upDegrees","downTan","downDegrees","leftTan","leftDegrees","rightTan","rightDegrees","xScale","yScale","ortho","lr","bt","lookAt","eye","center","up","x0","x1","y0","y1","z0","z1","eyex","eyey","eyez","upx","upy","upz","centerx","centery","centerz","abs","targetTo","target","str","frob","add","subtract","multiplyScalar","multiplyScalarAndAdd","scale","exactEquals","a0","a1","a2","a3","a4","a5","a6","a7","a8","a9","a14","a15","b4","b5","b6","b7","b8","b9","b13","b14","b15","max","arguments","length","mul","sub","divide","ceil","floor","min","round","scaleAndAdd","distance","squaredDistance","squaredLength","negate","inverse","normalize","dot","cross","lerp","transformMat2","transformMat2d","transformMat3","transformMat4","p0","p1","sinC","cosC","angle","mag","cosine","acos","zero","vec","div","dist","sqrDist","sqrLen","forEach","stride","offset","count","fn","arg","hermite","factorTimes2","factor1","factor2","factor3","factor4","bezier","inverseFactor","inverseFactorTimesTwo","zScale","transformQuat","qx","qy","qz","qw","uvx","uvy","uvz","uuvx","uuvy","uuvz","w2","bitCount","num","bboxStart","bboxEnd","bboxCenter","initialized","dataLoadedOffset","renderPreferences","buffer","this","parseHeader","nodes","Uint32Array","slice","rootSide","nLevels","nNodes","nodeBufLength","originalNodeLength","lastOffset","fill","pow","loadChunk","maxIters","stepSize","node","getVoxel","maxRayLength","pos","nodeCenter","nodeIndex","hs","lev","childIndex","header","hitPos","childPtrOffset","position","upDir","viewMat","viewMatInv","projMat","projMatInv","fovY","window","innerWidth","innerHeight","forward","console","log","async","loadRaycastFragShader","gl","maxT3DTexels","getParameter","MAX_3D_TEXTURE_SIZE","maxT3DTexelsPow2","shaderSrcRes","fetch","shaderSrc","text","defines","split","splice","join","shader","createShader","FRAGMENT_SHADER","shaderSource","compileShader","getShaderInfoLog","loadProgram","vertShader","fragShader","program","createProgram","attachShader","linkProgram","getProgramParameter","LINK_STATUS","getProgramInfoLog","useProgram","UNIFORMS","NORMAL_UNIFORMS","RenderMode","camera","canvas","state","startTime","Date","getTime","time","frame","pathTraceFrame","pixelTolerance","renderScale","drawLevel","maxIterations","renderMode","NORMAL","useBeamOptimization","showUniqueNodeColors","getContext","minDepthW","width","minDepthH","height","minDepthFBO","minDepthTex","setupTexFBO","TEXTURE1","fullDepthFBO","fullDepthTex","TEXTURE2","normalFBO","normalTex","TEXTURE3","internalFormat","RGB8","format","RGB","type","UNSIGNED_BYTE","viewerUniformDict","depthUniformDict","normalUniformDict","depthProgram","bindFramebuffer","FRAMEBUFFER","activeTexture","bindTexture","TEXTURE_2D","setInitialUniforms","uniform2f","resolution","uniform1i","uniform1f","projectionFactor","getProjectionFactor","viewport","clearColor","clear","COLOR_BUFFER_BIT","drawArrays","TRIANGLES","normalProgram","setNormalUniforms","PATH_TRACING","pathTraceProgram","pathTraceUniformDict","viewerProgram","svdag","VERTEX_SHADER","loadVertShader","viewerFragShader","depthFragShader","normalFragShader","loadNormalFragShader","pathTraceFragShader","texNum","TEXTURE0","RGBA32F","RGBA","FLOAT","magFilter","NEAREST","minFilter","wrapS","CLAMP_TO_EDGE","wrapT","fbo","createFramebuffer","tex","createTexture","texImage2D","texParameteri","TEXTURE_MAG_FILTER","TEXTURE_MIN_FILTER","TEXTURE_WRAP_S","TEXTURE_WRAP_T","framebufferTexture2D","COLOR_ATTACHMENT0","drawBuffers","fboStatus","checkFramebufferStatus","FRAMEBUFFER_COMPLETE","error","u","getUniformLocation","screenDivisor","ud","uniform3fv","sceneBBoxMin","sceneBBoxMax","sceneCenter","rootHalfSide","lightPos","uniform1ui","uniqueColors","viewerRenderMode","uniformMatrix4fv","ptFrame","depthTex","hitNormTex","screenTex","viewProjMatInv","texture","TEXTURE_3D","REPEAT","TEXTURE_WRAP_R","undefined","deleteTexture","nNewNodes","neededTexels","depthLayers","nTexelsToAllocate","chunkStart","paddedNodes","texStorage3D","R32UI","texSubImage3D","RED_INTEGER","UNSIGNED_INT","xOffset","yOffset","zOffset","chunkStartZ","chunkEndZ","updateWidth","updateHeight","updateDepth","newNodes","progressPct","moveSpeed","prevMousePos","mousePos","tmpDir","keyDownStatus","radius","dt","updated","tmpKeyDir","numTouches","moveInDirection","rotateAlongLocalY","delta","document","documentElement","clientWidth","clientHeight","lookSpeed","rotateAlongLocalX","updateMatrices","dir","speed","amount","localX","e","toLocaleLowerCase","button","clientX","clientY","touches","setMoveSpeed","deltaY","label","getScene","generateCubeFractal","loadType","generatePyramidFractal","fetchPrebuiltScenes","map","fileName","size","downloadPath","absolutePath","hostUrl","res","pageString","doc","DOMParser","parseFromString","from","querySelectorAll","row","childNodes","innerText","trim","replace","querySelector","href","pop","nodeData","ITERATIONS","spawnPosition","generateBaseFractal","DIFFUSE_LIGHTING","controller","scene","sceneList","renderer","win","fpsCountTime","now","fpsCount","latestFps","lastFrameTime","setRenderScale","style","transform","getElementById","setDrawLevel","setRenderMode","parseInt","parseFloat","toFixed","setMaxIterations","loadSceneStream","reader","body","getReader","done","read","initScene","uploadTexData","loadButton","disabled","finish","lastUpload","lastUploadIndex","byteLength","loadNodesPromise","then","loadScene","sceneOption","response","load","arrayBuffer","loadSelectedScene","Error","selector","selectedSceneIndex","options","selectedIndex","deleteNodesTexture","oldBboxCenter","createNodesTexture","init","render","title","update","requestAnimationFrame","setPixelTolerance","setShowUniqueColors","val","setUseBeamOptimization","disable","checkbox","checked","addEventListener","alert","VERSION","SHADING_LANGUAGE_VERSION","VENDOR","getSupportedExtensions","maxNodes","getExtension","push","getGeneratedSceneList","sceneSelector","addSceneToUI","item","index","opt","createElement","appendChild","getPrebuiltSceneList","scenes","innerHTML","initShaders","initialize","initUniforms","DEPTH_TEST","tabIndex","onKeyDown","onKeyUp","onMouseDown","onMouseUp","onMouseMove","onMouseWheel","oncontextmenu","onTouchStart","onTouchEnd","onTouchMove","setTimeout"],"mappings":"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","file":"bundle.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 6);\n","/**\r\n * Common utilities\r\n * @module glMatrix\r\n */\n// Configuration Constants\nexport var EPSILON = 0.000001;\nexport var ARRAY_TYPE = typeof Float32Array !== 'undefined' ? Float32Array : Array;\nexport var RANDOM = Math.random;\n/**\r\n * Sets the type of array used when creating new vectors and matrices\r\n *\r\n * @param {Float32ArrayConstructor | ArrayConstructor} type Array type, such as Float32Array or Array\r\n */\n\nexport function setMatrixArrayType(type) {\n  ARRAY_TYPE = type;\n}\nvar degree = Math.PI / 180;\n/**\r\n * Convert Degree To Radian\r\n *\r\n * @param {Number} a Angle in Degrees\r\n */\n\nexport function toRadian(a) {\n  return a * degree;\n}\n/**\r\n * Tests whether or not the arguments have approximately the same value, within an absolute\r\n * or relative tolerance of glMatrix.EPSILON (an absolute tolerance is used for values less\r\n * than or equal to 1.0, and a relative tolerance is used for larger values)\r\n *\r\n * @param {Number} a The first number to test.\r\n * @param {Number} b The second number to test.\r\n * @returns {Boolean} True if the numbers are approximately equal, false otherwise.\r\n */\n\nexport function equals(a, b) {\n  return Math.abs(a - b) <= EPSILON * Math.max(1.0, Math.abs(a), Math.abs(b));\n}\nif (!Math.hypot) Math.hypot = function () {\n  var y = 0,\n      i = arguments.length;\n\n  while (i--) {\n    y += arguments[i] * arguments[i];\n  }\n\n  return Math.sqrt(y);\n};","import * as glMatrix from \"./common.js\";\n/**\r\n * 4x4 Matrix<br>Format: column-major, when typed out it looks like row-major<br>The matrices are being post multiplied.\r\n * @module mat4\r\n */\n\n/**\r\n * Creates a new identity mat4\r\n *\r\n * @returns {mat4} a new 4x4 matrix\r\n */\n\nexport function create() {\n  var out = new glMatrix.ARRAY_TYPE(16);\n\n  if (glMatrix.ARRAY_TYPE != Float32Array) {\n    out[1] = 0;\n    out[2] = 0;\n    out[3] = 0;\n    out[4] = 0;\n    out[6] = 0;\n    out[7] = 0;\n    out[8] = 0;\n    out[9] = 0;\n    out[11] = 0;\n    out[12] = 0;\n    out[13] = 0;\n    out[14] = 0;\n  }\n\n  out[0] = 1;\n  out[5] = 1;\n  out[10] = 1;\n  out[15] = 1;\n  return out;\n}\n/**\r\n * Creates a new mat4 initialized with values from an existing matrix\r\n *\r\n * @param {ReadonlyMat4} a matrix to clone\r\n * @returns {mat4} a new 4x4 matrix\r\n */\n\nexport function clone(a) {\n  var out = new glMatrix.ARRAY_TYPE(16);\n  out[0] = a[0];\n  out[1] = a[1];\n  out[2] = a[2];\n  out[3] = a[3];\n  out[4] = a[4];\n  out[5] = a[5];\n  out[6] = a[6];\n  out[7] = a[7];\n  out[8] = a[8];\n  out[9] = a[9];\n  out[10] = a[10];\n  out[11] = a[11];\n  out[12] = a[12];\n  out[13] = a[13];\n  out[14] = a[14];\n  out[15] = a[15];\n  return out;\n}\n/**\r\n * Copy the values from one mat4 to another\r\n *\r\n * @param {mat4} out the receiving matrix\r\n * @param {ReadonlyMat4} a the source matrix\r\n * @returns {mat4} out\r\n */\n\nexport function copy(out, a) {\n  out[0] = a[0];\n  out[1] = a[1];\n  out[2] = a[2];\n  out[3] = a[3];\n  out[4] = a[4];\n  out[5] = a[5];\n  out[6] = a[6];\n  out[7] = a[7];\n  out[8] = a[8];\n  out[9] = a[9];\n  out[10] = a[10];\n  out[11] = a[11];\n  out[12] = a[12];\n  out[13] = a[13];\n  out[14] = a[14];\n  out[15] = a[15];\n  return out;\n}\n/**\r\n * Create a new mat4 with the given values\r\n *\r\n * @param {Number} m00 Component in column 0, row 0 position (index 0)\r\n * @param {Number} m01 Component in column 0, row 1 position (index 1)\r\n * @param {Number} m02 Component in column 0, row 2 position (index 2)\r\n * @param {Number} m03 Component in column 0, row 3 position (index 3)\r\n * @param {Number} m10 Component in column 1, row 0 position (index 4)\r\n * @param {Number} m11 Component in column 1, row 1 position (index 5)\r\n * @param {Number} m12 Component in column 1, row 2 position (index 6)\r\n * @param {Number} m13 Component in column 1, row 3 position (index 7)\r\n * @param {Number} m20 Component in column 2, row 0 position (index 8)\r\n * @param {Number} m21 Component in column 2, row 1 position (index 9)\r\n * @param {Number} m22 Component in column 2, row 2 position (index 10)\r\n * @param {Number} m23 Component in column 2, row 3 position (index 11)\r\n * @param {Number} m30 Component in column 3, row 0 position (index 12)\r\n * @param {Number} m31 Component in column 3, row 1 position (index 13)\r\n * @param {Number} m32 Component in column 3, row 2 position (index 14)\r\n * @param {Number} m33 Component in column 3, row 3 position (index 15)\r\n * @returns {mat4} A new mat4\r\n */\n\nexport function fromValues(m00, m01, m02, m03, m10, m11, m12, m13, m20, m21, m22, m23, m30, m31, m32, m33) {\n  var out = new glMatrix.ARRAY_TYPE(16);\n  out[0] = m00;\n  out[1] = m01;\n  out[2] = m02;\n  out[3] = m03;\n  out[4] = m10;\n  out[5] = m11;\n  out[6] = m12;\n  out[7] = m13;\n  out[8] = m20;\n  out[9] = m21;\n  out[10] = m22;\n  out[11] = m23;\n  out[12] = m30;\n  out[13] = m31;\n  out[14] = m32;\n  out[15] = m33;\n  return out;\n}\n/**\r\n * Set the components of a mat4 to the given values\r\n *\r\n * @param {mat4} out the receiving matrix\r\n * @param {Number} m00 Component in column 0, row 0 position (index 0)\r\n * @param {Number} m01 Component in column 0, row 1 position (index 1)\r\n * @param {Number} m02 Component in column 0, row 2 position (index 2)\r\n * @param {Number} m03 Component in column 0, row 3 position (index 3)\r\n * @param {Number} m10 Component in column 1, row 0 position (index 4)\r\n * @param {Number} m11 Component in column 1, row 1 position (index 5)\r\n * @param {Number} m12 Component in column 1, row 2 position (index 6)\r\n * @param {Number} m13 Component in column 1, row 3 position (index 7)\r\n * @param {Number} m20 Component in column 2, row 0 position (index 8)\r\n * @param {Number} m21 Component in column 2, row 1 position (index 9)\r\n * @param {Number} m22 Component in column 2, row 2 position (index 10)\r\n * @param {Number} m23 Component in column 2, row 3 position (index 11)\r\n * @param {Number} m30 Component in column 3, row 0 position (index 12)\r\n * @param {Number} m31 Component in column 3, row 1 position (index 13)\r\n * @param {Number} m32 Component in column 3, row 2 position (index 14)\r\n * @param {Number} m33 Component in column 3, row 3 position (index 15)\r\n * @returns {mat4} out\r\n */\n\nexport function set(out, m00, m01, m02, m03, m10, m11, m12, m13, m20, m21, m22, m23, m30, m31, m32, m33) {\n  out[0] = m00;\n  out[1] = m01;\n  out[2] = m02;\n  out[3] = m03;\n  out[4] = m10;\n  out[5] = m11;\n  out[6] = m12;\n  out[7] = m13;\n  out[8] = m20;\n  out[9] = m21;\n  out[10] = m22;\n  out[11] = m23;\n  out[12] = m30;\n  out[13] = m31;\n  out[14] = m32;\n  out[15] = m33;\n  return out;\n}\n/**\r\n * Set a mat4 to the identity matrix\r\n *\r\n * @param {mat4} out the receiving matrix\r\n * @returns {mat4} out\r\n */\n\nexport function identity(out) {\n  out[0] = 1;\n  out[1] = 0;\n  out[2] = 0;\n  out[3] = 0;\n  out[4] = 0;\n  out[5] = 1;\n  out[6] = 0;\n  out[7] = 0;\n  out[8] = 0;\n  out[9] = 0;\n  out[10] = 1;\n  out[11] = 0;\n  out[12] = 0;\n  out[13] = 0;\n  out[14] = 0;\n  out[15] = 1;\n  return out;\n}\n/**\r\n * Transpose the values of a mat4\r\n *\r\n * @param {mat4} out the receiving matrix\r\n * @param {ReadonlyMat4} a the source matrix\r\n * @returns {mat4} out\r\n */\n\nexport function transpose(out, a) {\n  // If we are transposing ourselves we can skip a few steps but have to cache some values\n  if (out === a) {\n    var a01 = a[1],\n        a02 = a[2],\n        a03 = a[3];\n    var a12 = a[6],\n        a13 = a[7];\n    var a23 = a[11];\n    out[1] = a[4];\n    out[2] = a[8];\n    out[3] = a[12];\n    out[4] = a01;\n    out[6] = a[9];\n    out[7] = a[13];\n    out[8] = a02;\n    out[9] = a12;\n    out[11] = a[14];\n    out[12] = a03;\n    out[13] = a13;\n    out[14] = a23;\n  } else {\n    out[0] = a[0];\n    out[1] = a[4];\n    out[2] = a[8];\n    out[3] = a[12];\n    out[4] = a[1];\n    out[5] = a[5];\n    out[6] = a[9];\n    out[7] = a[13];\n    out[8] = a[2];\n    out[9] = a[6];\n    out[10] = a[10];\n    out[11] = a[14];\n    out[12] = a[3];\n    out[13] = a[7];\n    out[14] = a[11];\n    out[15] = a[15];\n  }\n\n  return out;\n}\n/**\r\n * Inverts a mat4\r\n *\r\n * @param {mat4} out the receiving matrix\r\n * @param {ReadonlyMat4} a the source matrix\r\n * @returns {mat4} out\r\n */\n\nexport function invert(out, a) {\n  var a00 = a[0],\n      a01 = a[1],\n      a02 = a[2],\n      a03 = a[3];\n  var a10 = a[4],\n      a11 = a[5],\n      a12 = a[6],\n      a13 = a[7];\n  var a20 = a[8],\n      a21 = a[9],\n      a22 = a[10],\n      a23 = a[11];\n  var a30 = a[12],\n      a31 = a[13],\n      a32 = a[14],\n      a33 = a[15];\n  var b00 = a00 * a11 - a01 * a10;\n  var b01 = a00 * a12 - a02 * a10;\n  var b02 = a00 * a13 - a03 * a10;\n  var b03 = a01 * a12 - a02 * a11;\n  var b04 = a01 * a13 - a03 * a11;\n  var b05 = a02 * a13 - a03 * a12;\n  var b06 = a20 * a31 - a21 * a30;\n  var b07 = a20 * a32 - a22 * a30;\n  var b08 = a20 * a33 - a23 * a30;\n  var b09 = a21 * a32 - a22 * a31;\n  var b10 = a21 * a33 - a23 * a31;\n  var b11 = a22 * a33 - a23 * a32; // Calculate the determinant\n\n  var det = b00 * b11 - b01 * b10 + b02 * b09 + b03 * b08 - b04 * b07 + b05 * b06;\n\n  if (!det) {\n    return null;\n  }\n\n  det = 1.0 / det;\n  out[0] = (a11 * b11 - a12 * b10 + a13 * b09) * det;\n  out[1] = (a02 * b10 - a01 * b11 - a03 * b09) * det;\n  out[2] = (a31 * b05 - a32 * b04 + a33 * b03) * det;\n  out[3] = (a22 * b04 - a21 * b05 - a23 * b03) * det;\n  out[4] = (a12 * b08 - a10 * b11 - a13 * b07) * det;\n  out[5] = (a00 * b11 - a02 * b08 + a03 * b07) * det;\n  out[6] = (a32 * b02 - a30 * b05 - a33 * b01) * det;\n  out[7] = (a20 * b05 - a22 * b02 + a23 * b01) * det;\n  out[8] = (a10 * b10 - a11 * b08 + a13 * b06) * det;\n  out[9] = (a01 * b08 - a00 * b10 - a03 * b06) * det;\n  out[10] = (a30 * b04 - a31 * b02 + a33 * b00) * det;\n  out[11] = (a21 * b02 - a20 * b04 - a23 * b00) * det;\n  out[12] = (a11 * b07 - a10 * b09 - a12 * b06) * det;\n  out[13] = (a00 * b09 - a01 * b07 + a02 * b06) * det;\n  out[14] = (a31 * b01 - a30 * b03 - a32 * b00) * det;\n  out[15] = (a20 * b03 - a21 * b01 + a22 * b00) * det;\n  return out;\n}\n/**\r\n * Calculates the adjugate of a mat4\r\n *\r\n * @param {mat4} out the receiving matrix\r\n * @param {ReadonlyMat4} a the source matrix\r\n * @returns {mat4} out\r\n */\n\nexport function adjoint(out, a) {\n  var a00 = a[0],\n      a01 = a[1],\n      a02 = a[2],\n      a03 = a[3];\n  var a10 = a[4],\n      a11 = a[5],\n      a12 = a[6],\n      a13 = a[7];\n  var a20 = a[8],\n      a21 = a[9],\n      a22 = a[10],\n      a23 = a[11];\n  var a30 = a[12],\n      a31 = a[13],\n      a32 = a[14],\n      a33 = a[15];\n  out[0] = a11 * (a22 * a33 - a23 * a32) - a21 * (a12 * a33 - a13 * a32) + a31 * (a12 * a23 - a13 * a22);\n  out[1] = -(a01 * (a22 * a33 - a23 * a32) - a21 * (a02 * a33 - a03 * a32) + a31 * (a02 * a23 - a03 * a22));\n  out[2] = a01 * (a12 * a33 - a13 * a32) - a11 * (a02 * a33 - a03 * a32) + a31 * (a02 * a13 - a03 * a12);\n  out[3] = -(a01 * (a12 * a23 - a13 * a22) - a11 * (a02 * a23 - a03 * a22) + a21 * (a02 * a13 - a03 * a12));\n  out[4] = -(a10 * (a22 * a33 - a23 * a32) - a20 * (a12 * a33 - a13 * a32) + a30 * (a12 * a23 - a13 * a22));\n  out[5] = a00 * (a22 * a33 - a23 * a32) - a20 * (a02 * a33 - a03 * a32) + a30 * (a02 * a23 - a03 * a22);\n  out[6] = -(a00 * (a12 * a33 - a13 * a32) - a10 * (a02 * a33 - a03 * a32) + a30 * (a02 * a13 - a03 * a12));\n  out[7] = a00 * (a12 * a23 - a13 * a22) - a10 * (a02 * a23 - a03 * a22) + a20 * (a02 * a13 - a03 * a12);\n  out[8] = a10 * (a21 * a33 - a23 * a31) - a20 * (a11 * a33 - a13 * a31) + a30 * (a11 * a23 - a13 * a21);\n  out[9] = -(a00 * (a21 * a33 - a23 * a31) - a20 * (a01 * a33 - a03 * a31) + a30 * (a01 * a23 - a03 * a21));\n  out[10] = a00 * (a11 * a33 - a13 * a31) - a10 * (a01 * a33 - a03 * a31) + a30 * (a01 * a13 - a03 * a11);\n  out[11] = -(a00 * (a11 * a23 - a13 * a21) - a10 * (a01 * a23 - a03 * a21) + a20 * (a01 * a13 - a03 * a11));\n  out[12] = -(a10 * (a21 * a32 - a22 * a31) - a20 * (a11 * a32 - a12 * a31) + a30 * (a11 * a22 - a12 * a21));\n  out[13] = a00 * (a21 * a32 - a22 * a31) - a20 * (a01 * a32 - a02 * a31) + a30 * (a01 * a22 - a02 * a21);\n  out[14] = -(a00 * (a11 * a32 - a12 * a31) - a10 * (a01 * a32 - a02 * a31) + a30 * (a01 * a12 - a02 * a11));\n  out[15] = a00 * (a11 * a22 - a12 * a21) - a10 * (a01 * a22 - a02 * a21) + a20 * (a01 * a12 - a02 * a11);\n  return out;\n}\n/**\r\n * Calculates the determinant of a mat4\r\n *\r\n * @param {ReadonlyMat4} a the source matrix\r\n * @returns {Number} determinant of a\r\n */\n\nexport function determinant(a) {\n  var a00 = a[0],\n      a01 = a[1],\n      a02 = a[2],\n      a03 = a[3];\n  var a10 = a[4],\n      a11 = a[5],\n      a12 = a[6],\n      a13 = a[7];\n  var a20 = a[8],\n      a21 = a[9],\n      a22 = a[10],\n      a23 = a[11];\n  var a30 = a[12],\n      a31 = a[13],\n      a32 = a[14],\n      a33 = a[15];\n  var b00 = a00 * a11 - a01 * a10;\n  var b01 = a00 * a12 - a02 * a10;\n  var b02 = a00 * a13 - a03 * a10;\n  var b03 = a01 * a12 - a02 * a11;\n  var b04 = a01 * a13 - a03 * a11;\n  var b05 = a02 * a13 - a03 * a12;\n  var b06 = a20 * a31 - a21 * a30;\n  var b07 = a20 * a32 - a22 * a30;\n  var b08 = a20 * a33 - a23 * a30;\n  var b09 = a21 * a32 - a22 * a31;\n  var b10 = a21 * a33 - a23 * a31;\n  var b11 = a22 * a33 - a23 * a32; // Calculate the determinant\n\n  return b00 * b11 - b01 * b10 + b02 * b09 + b03 * b08 - b04 * b07 + b05 * b06;\n}\n/**\r\n * Multiplies two mat4s\r\n *\r\n * @param {mat4} out the receiving matrix\r\n * @param {ReadonlyMat4} a the first operand\r\n * @param {ReadonlyMat4} b the second operand\r\n * @returns {mat4} out\r\n */\n\nexport function multiply(out, a, b) {\n  var a00 = a[0],\n      a01 = a[1],\n      a02 = a[2],\n      a03 = a[3];\n  var a10 = a[4],\n      a11 = a[5],\n      a12 = a[6],\n      a13 = a[7];\n  var a20 = a[8],\n      a21 = a[9],\n      a22 = a[10],\n      a23 = a[11];\n  var a30 = a[12],\n      a31 = a[13],\n      a32 = a[14],\n      a33 = a[15]; // Cache only the current line of the second matrix\n\n  var b0 = b[0],\n      b1 = b[1],\n      b2 = b[2],\n      b3 = b[3];\n  out[0] = b0 * a00 + b1 * a10 + b2 * a20 + b3 * a30;\n  out[1] = b0 * a01 + b1 * a11 + b2 * a21 + b3 * a31;\n  out[2] = b0 * a02 + b1 * a12 + b2 * a22 + b3 * a32;\n  out[3] = b0 * a03 + b1 * a13 + b2 * a23 + b3 * a33;\n  b0 = b[4];\n  b1 = b[5];\n  b2 = b[6];\n  b3 = b[7];\n  out[4] = b0 * a00 + b1 * a10 + b2 * a20 + b3 * a30;\n  out[5] = b0 * a01 + b1 * a11 + b2 * a21 + b3 * a31;\n  out[6] = b0 * a02 + b1 * a12 + b2 * a22 + b3 * a32;\n  out[7] = b0 * a03 + b1 * a13 + b2 * a23 + b3 * a33;\n  b0 = b[8];\n  b1 = b[9];\n  b2 = b[10];\n  b3 = b[11];\n  out[8] = b0 * a00 + b1 * a10 + b2 * a20 + b3 * a30;\n  out[9] = b0 * a01 + b1 * a11 + b2 * a21 + b3 * a31;\n  out[10] = b0 * a02 + b1 * a12 + b2 * a22 + b3 * a32;\n  out[11] = b0 * a03 + b1 * a13 + b2 * a23 + b3 * a33;\n  b0 = b[12];\n  b1 = b[13];\n  b2 = b[14];\n  b3 = b[15];\n  out[12] = b0 * a00 + b1 * a10 + b2 * a20 + b3 * a30;\n  out[13] = b0 * a01 + b1 * a11 + b2 * a21 + b3 * a31;\n  out[14] = b0 * a02 + b1 * a12 + b2 * a22 + b3 * a32;\n  out[15] = b0 * a03 + b1 * a13 + b2 * a23 + b3 * a33;\n  return out;\n}\n/**\r\n * Translate a mat4 by the given vector\r\n *\r\n * @param {mat4} out the receiving matrix\r\n * @param {ReadonlyMat4} a the matrix to translate\r\n * @param {ReadonlyVec3} v vector to translate by\r\n * @returns {mat4} out\r\n */\n\nexport function translate(out, a, v) {\n  var x = v[0],\n      y = v[1],\n      z = v[2];\n  var a00, a01, a02, a03;\n  var a10, a11, a12, a13;\n  var a20, a21, a22, a23;\n\n  if (a === out) {\n    out[12] = a[0] * x + a[4] * y + a[8] * z + a[12];\n    out[13] = a[1] * x + a[5] * y + a[9] * z + a[13];\n    out[14] = a[2] * x + a[6] * y + a[10] * z + a[14];\n    out[15] = a[3] * x + a[7] * y + a[11] * z + a[15];\n  } else {\n    a00 = a[0];\n    a01 = a[1];\n    a02 = a[2];\n    a03 = a[3];\n    a10 = a[4];\n    a11 = a[5];\n    a12 = a[6];\n    a13 = a[7];\n    a20 = a[8];\n    a21 = a[9];\n    a22 = a[10];\n    a23 = a[11];\n    out[0] = a00;\n    out[1] = a01;\n    out[2] = a02;\n    out[3] = a03;\n    out[4] = a10;\n    out[5] = a11;\n    out[6] = a12;\n    out[7] = a13;\n    out[8] = a20;\n    out[9] = a21;\n    out[10] = a22;\n    out[11] = a23;\n    out[12] = a00 * x + a10 * y + a20 * z + a[12];\n    out[13] = a01 * x + a11 * y + a21 * z + a[13];\n    out[14] = a02 * x + a12 * y + a22 * z + a[14];\n    out[15] = a03 * x + a13 * y + a23 * z + a[15];\n  }\n\n  return out;\n}\n/**\r\n * Scales the mat4 by the dimensions in the given vec3 not using vectorization\r\n *\r\n * @param {mat4} out the receiving matrix\r\n * @param {ReadonlyMat4} a the matrix to scale\r\n * @param {ReadonlyVec3} v the vec3 to scale the matrix by\r\n * @returns {mat4} out\r\n **/\n\nexport function scale(out, a, v) {\n  var x = v[0],\n      y = v[1],\n      z = v[2];\n  out[0] = a[0] * x;\n  out[1] = a[1] * x;\n  out[2] = a[2] * x;\n  out[3] = a[3] * x;\n  out[4] = a[4] * y;\n  out[5] = a[5] * y;\n  out[6] = a[6] * y;\n  out[7] = a[7] * y;\n  out[8] = a[8] * z;\n  out[9] = a[9] * z;\n  out[10] = a[10] * z;\n  out[11] = a[11] * z;\n  out[12] = a[12];\n  out[13] = a[13];\n  out[14] = a[14];\n  out[15] = a[15];\n  return out;\n}\n/**\r\n * Rotates a mat4 by the given angle around the given axis\r\n *\r\n * @param {mat4} out the receiving matrix\r\n * @param {ReadonlyMat4} a the matrix to rotate\r\n * @param {Number} rad the angle to rotate the matrix by\r\n * @param {ReadonlyVec3} axis the axis to rotate around\r\n * @returns {mat4} out\r\n */\n\nexport function rotate(out, a, rad, axis) {\n  var x = axis[0],\n      y = axis[1],\n      z = axis[2];\n  var len = Math.hypot(x, y, z);\n  var s, c, t;\n  var a00, a01, a02, a03;\n  var a10, a11, a12, a13;\n  var a20, a21, a22, a23;\n  var b00, b01, b02;\n  var b10, b11, b12;\n  var b20, b21, b22;\n\n  if (len < glMatrix.EPSILON) {\n    return null;\n  }\n\n  len = 1 / len;\n  x *= len;\n  y *= len;\n  z *= len;\n  s = Math.sin(rad);\n  c = Math.cos(rad);\n  t = 1 - c;\n  a00 = a[0];\n  a01 = a[1];\n  a02 = a[2];\n  a03 = a[3];\n  a10 = a[4];\n  a11 = a[5];\n  a12 = a[6];\n  a13 = a[7];\n  a20 = a[8];\n  a21 = a[9];\n  a22 = a[10];\n  a23 = a[11]; // Construct the elements of the rotation matrix\n\n  b00 = x * x * t + c;\n  b01 = y * x * t + z * s;\n  b02 = z * x * t - y * s;\n  b10 = x * y * t - z * s;\n  b11 = y * y * t + c;\n  b12 = z * y * t + x * s;\n  b20 = x * z * t + y * s;\n  b21 = y * z * t - x * s;\n  b22 = z * z * t + c; // Perform rotation-specific matrix multiplication\n\n  out[0] = a00 * b00 + a10 * b01 + a20 * b02;\n  out[1] = a01 * b00 + a11 * b01 + a21 * b02;\n  out[2] = a02 * b00 + a12 * b01 + a22 * b02;\n  out[3] = a03 * b00 + a13 * b01 + a23 * b02;\n  out[4] = a00 * b10 + a10 * b11 + a20 * b12;\n  out[5] = a01 * b10 + a11 * b11 + a21 * b12;\n  out[6] = a02 * b10 + a12 * b11 + a22 * b12;\n  out[7] = a03 * b10 + a13 * b11 + a23 * b12;\n  out[8] = a00 * b20 + a10 * b21 + a20 * b22;\n  out[9] = a01 * b20 + a11 * b21 + a21 * b22;\n  out[10] = a02 * b20 + a12 * b21 + a22 * b22;\n  out[11] = a03 * b20 + a13 * b21 + a23 * b22;\n\n  if (a !== out) {\n    // If the source and destination differ, copy the unchanged last row\n    out[12] = a[12];\n    out[13] = a[13];\n    out[14] = a[14];\n    out[15] = a[15];\n  }\n\n  return out;\n}\n/**\r\n * Rotates a matrix by the given angle around the X axis\r\n *\r\n * @param {mat4} out the receiving matrix\r\n * @param {ReadonlyMat4} a the matrix to rotate\r\n * @param {Number} rad the angle to rotate the matrix by\r\n * @returns {mat4} out\r\n */\n\nexport function rotateX(out, a, rad) {\n  var s = Math.sin(rad);\n  var c = Math.cos(rad);\n  var a10 = a[4];\n  var a11 = a[5];\n  var a12 = a[6];\n  var a13 = a[7];\n  var a20 = a[8];\n  var a21 = a[9];\n  var a22 = a[10];\n  var a23 = a[11];\n\n  if (a !== out) {\n    // If the source and destination differ, copy the unchanged rows\n    out[0] = a[0];\n    out[1] = a[1];\n    out[2] = a[2];\n    out[3] = a[3];\n    out[12] = a[12];\n    out[13] = a[13];\n    out[14] = a[14];\n    out[15] = a[15];\n  } // Perform axis-specific matrix multiplication\n\n\n  out[4] = a10 * c + a20 * s;\n  out[5] = a11 * c + a21 * s;\n  out[6] = a12 * c + a22 * s;\n  out[7] = a13 * c + a23 * s;\n  out[8] = a20 * c - a10 * s;\n  out[9] = a21 * c - a11 * s;\n  out[10] = a22 * c - a12 * s;\n  out[11] = a23 * c - a13 * s;\n  return out;\n}\n/**\r\n * Rotates a matrix by the given angle around the Y axis\r\n *\r\n * @param {mat4} out the receiving matrix\r\n * @param {ReadonlyMat4} a the matrix to rotate\r\n * @param {Number} rad the angle to rotate the matrix by\r\n * @returns {mat4} out\r\n */\n\nexport function rotateY(out, a, rad) {\n  var s = Math.sin(rad);\n  var c = Math.cos(rad);\n  var a00 = a[0];\n  var a01 = a[1];\n  var a02 = a[2];\n  var a03 = a[3];\n  var a20 = a[8];\n  var a21 = a[9];\n  var a22 = a[10];\n  var a23 = a[11];\n\n  if (a !== out) {\n    // If the source and destination differ, copy the unchanged rows\n    out[4] = a[4];\n    out[5] = a[5];\n    out[6] = a[6];\n    out[7] = a[7];\n    out[12] = a[12];\n    out[13] = a[13];\n    out[14] = a[14];\n    out[15] = a[15];\n  } // Perform axis-specific matrix multiplication\n\n\n  out[0] = a00 * c - a20 * s;\n  out[1] = a01 * c - a21 * s;\n  out[2] = a02 * c - a22 * s;\n  out[3] = a03 * c - a23 * s;\n  out[8] = a00 * s + a20 * c;\n  out[9] = a01 * s + a21 * c;\n  out[10] = a02 * s + a22 * c;\n  out[11] = a03 * s + a23 * c;\n  return out;\n}\n/**\r\n * Rotates a matrix by the given angle around the Z axis\r\n *\r\n * @param {mat4} out the receiving matrix\r\n * @param {ReadonlyMat4} a the matrix to rotate\r\n * @param {Number} rad the angle to rotate the matrix by\r\n * @returns {mat4} out\r\n */\n\nexport function rotateZ(out, a, rad) {\n  var s = Math.sin(rad);\n  var c = Math.cos(rad);\n  var a00 = a[0];\n  var a01 = a[1];\n  var a02 = a[2];\n  var a03 = a[3];\n  var a10 = a[4];\n  var a11 = a[5];\n  var a12 = a[6];\n  var a13 = a[7];\n\n  if (a !== out) {\n    // If the source and destination differ, copy the unchanged last row\n    out[8] = a[8];\n    out[9] = a[9];\n    out[10] = a[10];\n    out[11] = a[11];\n    out[12] = a[12];\n    out[13] = a[13];\n    out[14] = a[14];\n    out[15] = a[15];\n  } // Perform axis-specific matrix multiplication\n\n\n  out[0] = a00 * c + a10 * s;\n  out[1] = a01 * c + a11 * s;\n  out[2] = a02 * c + a12 * s;\n  out[3] = a03 * c + a13 * s;\n  out[4] = a10 * c - a00 * s;\n  out[5] = a11 * c - a01 * s;\n  out[6] = a12 * c - a02 * s;\n  out[7] = a13 * c - a03 * s;\n  return out;\n}\n/**\r\n * Creates a matrix from a vector translation\r\n * This is equivalent to (but much faster than):\r\n *\r\n *     mat4.identity(dest);\r\n *     mat4.translate(dest, dest, vec);\r\n *\r\n * @param {mat4} out mat4 receiving operation result\r\n * @param {ReadonlyVec3} v Translation vector\r\n * @returns {mat4} out\r\n */\n\nexport function fromTranslation(out, v) {\n  out[0] = 1;\n  out[1] = 0;\n  out[2] = 0;\n  out[3] = 0;\n  out[4] = 0;\n  out[5] = 1;\n  out[6] = 0;\n  out[7] = 0;\n  out[8] = 0;\n  out[9] = 0;\n  out[10] = 1;\n  out[11] = 0;\n  out[12] = v[0];\n  out[13] = v[1];\n  out[14] = v[2];\n  out[15] = 1;\n  return out;\n}\n/**\r\n * Creates a matrix from a vector scaling\r\n * This is equivalent to (but much faster than):\r\n *\r\n *     mat4.identity(dest);\r\n *     mat4.scale(dest, dest, vec);\r\n *\r\n * @param {mat4} out mat4 receiving operation result\r\n * @param {ReadonlyVec3} v Scaling vector\r\n * @returns {mat4} out\r\n */\n\nexport function fromScaling(out, v) {\n  out[0] = v[0];\n  out[1] = 0;\n  out[2] = 0;\n  out[3] = 0;\n  out[4] = 0;\n  out[5] = v[1];\n  out[6] = 0;\n  out[7] = 0;\n  out[8] = 0;\n  out[9] = 0;\n  out[10] = v[2];\n  out[11] = 0;\n  out[12] = 0;\n  out[13] = 0;\n  out[14] = 0;\n  out[15] = 1;\n  return out;\n}\n/**\r\n * Creates a matrix from a given angle around a given axis\r\n * This is equivalent to (but much faster than):\r\n *\r\n *     mat4.identity(dest);\r\n *     mat4.rotate(dest, dest, rad, axis);\r\n *\r\n * @param {mat4} out mat4 receiving operation result\r\n * @param {Number} rad the angle to rotate the matrix by\r\n * @param {ReadonlyVec3} axis the axis to rotate around\r\n * @returns {mat4} out\r\n */\n\nexport function fromRotation(out, rad, axis) {\n  var x = axis[0],\n      y = axis[1],\n      z = axis[2];\n  var len = Math.hypot(x, y, z);\n  var s, c, t;\n\n  if (len < glMatrix.EPSILON) {\n    return null;\n  }\n\n  len = 1 / len;\n  x *= len;\n  y *= len;\n  z *= len;\n  s = Math.sin(rad);\n  c = Math.cos(rad);\n  t = 1 - c; // Perform rotation-specific matrix multiplication\n\n  out[0] = x * x * t + c;\n  out[1] = y * x * t + z * s;\n  out[2] = z * x * t - y * s;\n  out[3] = 0;\n  out[4] = x * y * t - z * s;\n  out[5] = y * y * t + c;\n  out[6] = z * y * t + x * s;\n  out[7] = 0;\n  out[8] = x * z * t + y * s;\n  out[9] = y * z * t - x * s;\n  out[10] = z * z * t + c;\n  out[11] = 0;\n  out[12] = 0;\n  out[13] = 0;\n  out[14] = 0;\n  out[15] = 1;\n  return out;\n}\n/**\r\n * Creates a matrix from the given angle around the X axis\r\n * This is equivalent to (but much faster than):\r\n *\r\n *     mat4.identity(dest);\r\n *     mat4.rotateX(dest, dest, rad);\r\n *\r\n * @param {mat4} out mat4 receiving operation result\r\n * @param {Number} rad the angle to rotate the matrix by\r\n * @returns {mat4} out\r\n */\n\nexport function fromXRotation(out, rad) {\n  var s = Math.sin(rad);\n  var c = Math.cos(rad); // Perform axis-specific matrix multiplication\n\n  out[0] = 1;\n  out[1] = 0;\n  out[2] = 0;\n  out[3] = 0;\n  out[4] = 0;\n  out[5] = c;\n  out[6] = s;\n  out[7] = 0;\n  out[8] = 0;\n  out[9] = -s;\n  out[10] = c;\n  out[11] = 0;\n  out[12] = 0;\n  out[13] = 0;\n  out[14] = 0;\n  out[15] = 1;\n  return out;\n}\n/**\r\n * Creates a matrix from the given angle around the Y axis\r\n * This is equivalent to (but much faster than):\r\n *\r\n *     mat4.identity(dest);\r\n *     mat4.rotateY(dest, dest, rad);\r\n *\r\n * @param {mat4} out mat4 receiving operation result\r\n * @param {Number} rad the angle to rotate the matrix by\r\n * @returns {mat4} out\r\n */\n\nexport function fromYRotation(out, rad) {\n  var s = Math.sin(rad);\n  var c = Math.cos(rad); // Perform axis-specific matrix multiplication\n\n  out[0] = c;\n  out[1] = 0;\n  out[2] = -s;\n  out[3] = 0;\n  out[4] = 0;\n  out[5] = 1;\n  out[6] = 0;\n  out[7] = 0;\n  out[8] = s;\n  out[9] = 0;\n  out[10] = c;\n  out[11] = 0;\n  out[12] = 0;\n  out[13] = 0;\n  out[14] = 0;\n  out[15] = 1;\n  return out;\n}\n/**\r\n * Creates a matrix from the given angle around the Z axis\r\n * This is equivalent to (but much faster than):\r\n *\r\n *     mat4.identity(dest);\r\n *     mat4.rotateZ(dest, dest, rad);\r\n *\r\n * @param {mat4} out mat4 receiving operation result\r\n * @param {Number} rad the angle to rotate the matrix by\r\n * @returns {mat4} out\r\n */\n\nexport function fromZRotation(out, rad) {\n  var s = Math.sin(rad);\n  var c = Math.cos(rad); // Perform axis-specific matrix multiplication\n\n  out[0] = c;\n  out[1] = s;\n  out[2] = 0;\n  out[3] = 0;\n  out[4] = -s;\n  out[5] = c;\n  out[6] = 0;\n  out[7] = 0;\n  out[8] = 0;\n  out[9] = 0;\n  out[10] = 1;\n  out[11] = 0;\n  out[12] = 0;\n  out[13] = 0;\n  out[14] = 0;\n  out[15] = 1;\n  return out;\n}\n/**\r\n * Creates a matrix from a quaternion rotation and vector translation\r\n * This is equivalent to (but much faster than):\r\n *\r\n *     mat4.identity(dest);\r\n *     mat4.translate(dest, vec);\r\n *     let quatMat = mat4.create();\r\n *     quat4.toMat4(quat, quatMat);\r\n *     mat4.multiply(dest, quatMat);\r\n *\r\n * @param {mat4} out mat4 receiving operation result\r\n * @param {quat4} q Rotation quaternion\r\n * @param {ReadonlyVec3} v Translation vector\r\n * @returns {mat4} out\r\n */\n\nexport function fromRotationTranslation(out, q, v) {\n  // Quaternion math\n  var x = q[0],\n      y = q[1],\n      z = q[2],\n      w = q[3];\n  var x2 = x + x;\n  var y2 = y + y;\n  var z2 = z + z;\n  var xx = x * x2;\n  var xy = x * y2;\n  var xz = x * z2;\n  var yy = y * y2;\n  var yz = y * z2;\n  var zz = z * z2;\n  var wx = w * x2;\n  var wy = w * y2;\n  var wz = w * z2;\n  out[0] = 1 - (yy + zz);\n  out[1] = xy + wz;\n  out[2] = xz - wy;\n  out[3] = 0;\n  out[4] = xy - wz;\n  out[5] = 1 - (xx + zz);\n  out[6] = yz + wx;\n  out[7] = 0;\n  out[8] = xz + wy;\n  out[9] = yz - wx;\n  out[10] = 1 - (xx + yy);\n  out[11] = 0;\n  out[12] = v[0];\n  out[13] = v[1];\n  out[14] = v[2];\n  out[15] = 1;\n  return out;\n}\n/**\r\n * Creates a new mat4 from a dual quat.\r\n *\r\n * @param {mat4} out Matrix\r\n * @param {ReadonlyQuat2} a Dual Quaternion\r\n * @returns {mat4} mat4 receiving operation result\r\n */\n\nexport function fromQuat2(out, a) {\n  var translation = new glMatrix.ARRAY_TYPE(3);\n  var bx = -a[0],\n      by = -a[1],\n      bz = -a[2],\n      bw = a[3],\n      ax = a[4],\n      ay = a[5],\n      az = a[6],\n      aw = a[7];\n  var magnitude = bx * bx + by * by + bz * bz + bw * bw; //Only scale if it makes sense\n\n  if (magnitude > 0) {\n    translation[0] = (ax * bw + aw * bx + ay * bz - az * by) * 2 / magnitude;\n    translation[1] = (ay * bw + aw * by + az * bx - ax * bz) * 2 / magnitude;\n    translation[2] = (az * bw + aw * bz + ax * by - ay * bx) * 2 / magnitude;\n  } else {\n    translation[0] = (ax * bw + aw * bx + ay * bz - az * by) * 2;\n    translation[1] = (ay * bw + aw * by + az * bx - ax * bz) * 2;\n    translation[2] = (az * bw + aw * bz + ax * by - ay * bx) * 2;\n  }\n\n  fromRotationTranslation(out, a, translation);\n  return out;\n}\n/**\r\n * Returns the translation vector component of a transformation\r\n *  matrix. If a matrix is built with fromRotationTranslation,\r\n *  the returned vector will be the same as the translation vector\r\n *  originally supplied.\r\n * @param  {vec3} out Vector to receive translation component\r\n * @param  {ReadonlyMat4} mat Matrix to be decomposed (input)\r\n * @return {vec3} out\r\n */\n\nexport function getTranslation(out, mat) {\n  out[0] = mat[12];\n  out[1] = mat[13];\n  out[2] = mat[14];\n  return out;\n}\n/**\r\n * Returns the scaling factor component of a transformation\r\n *  matrix. If a matrix is built with fromRotationTranslationScale\r\n *  with a normalized Quaternion paramter, the returned vector will be\r\n *  the same as the scaling vector\r\n *  originally supplied.\r\n * @param  {vec3} out Vector to receive scaling factor component\r\n * @param  {ReadonlyMat4} mat Matrix to be decomposed (input)\r\n * @return {vec3} out\r\n */\n\nexport function getScaling(out, mat) {\n  var m11 = mat[0];\n  var m12 = mat[1];\n  var m13 = mat[2];\n  var m21 = mat[4];\n  var m22 = mat[5];\n  var m23 = mat[6];\n  var m31 = mat[8];\n  var m32 = mat[9];\n  var m33 = mat[10];\n  out[0] = Math.hypot(m11, m12, m13);\n  out[1] = Math.hypot(m21, m22, m23);\n  out[2] = Math.hypot(m31, m32, m33);\n  return out;\n}\n/**\r\n * Returns a quaternion representing the rotational component\r\n *  of a transformation matrix. If a matrix is built with\r\n *  fromRotationTranslation, the returned quaternion will be the\r\n *  same as the quaternion originally supplied.\r\n * @param {quat} out Quaternion to receive the rotation component\r\n * @param {ReadonlyMat4} mat Matrix to be decomposed (input)\r\n * @return {quat} out\r\n */\n\nexport function getRotation(out, mat) {\n  var scaling = new glMatrix.ARRAY_TYPE(3);\n  getScaling(scaling, mat);\n  var is1 = 1 / scaling[0];\n  var is2 = 1 / scaling[1];\n  var is3 = 1 / scaling[2];\n  var sm11 = mat[0] * is1;\n  var sm12 = mat[1] * is2;\n  var sm13 = mat[2] * is3;\n  var sm21 = mat[4] * is1;\n  var sm22 = mat[5] * is2;\n  var sm23 = mat[6] * is3;\n  var sm31 = mat[8] * is1;\n  var sm32 = mat[9] * is2;\n  var sm33 = mat[10] * is3;\n  var trace = sm11 + sm22 + sm33;\n  var S = 0;\n\n  if (trace > 0) {\n    S = Math.sqrt(trace + 1.0) * 2;\n    out[3] = 0.25 * S;\n    out[0] = (sm23 - sm32) / S;\n    out[1] = (sm31 - sm13) / S;\n    out[2] = (sm12 - sm21) / S;\n  } else if (sm11 > sm22 && sm11 > sm33) {\n    S = Math.sqrt(1.0 + sm11 - sm22 - sm33) * 2;\n    out[3] = (sm23 - sm32) / S;\n    out[0] = 0.25 * S;\n    out[1] = (sm12 + sm21) / S;\n    out[2] = (sm31 + sm13) / S;\n  } else if (sm22 > sm33) {\n    S = Math.sqrt(1.0 + sm22 - sm11 - sm33) * 2;\n    out[3] = (sm31 - sm13) / S;\n    out[0] = (sm12 + sm21) / S;\n    out[1] = 0.25 * S;\n    out[2] = (sm23 + sm32) / S;\n  } else {\n    S = Math.sqrt(1.0 + sm33 - sm11 - sm22) * 2;\n    out[3] = (sm12 - sm21) / S;\n    out[0] = (sm31 + sm13) / S;\n    out[1] = (sm23 + sm32) / S;\n    out[2] = 0.25 * S;\n  }\n\n  return out;\n}\n/**\r\n * Creates a matrix from a quaternion rotation, vector translation and vector scale\r\n * This is equivalent to (but much faster than):\r\n *\r\n *     mat4.identity(dest);\r\n *     mat4.translate(dest, vec);\r\n *     let quatMat = mat4.create();\r\n *     quat4.toMat4(quat, quatMat);\r\n *     mat4.multiply(dest, quatMat);\r\n *     mat4.scale(dest, scale)\r\n *\r\n * @param {mat4} out mat4 receiving operation result\r\n * @param {quat4} q Rotation quaternion\r\n * @param {ReadonlyVec3} v Translation vector\r\n * @param {ReadonlyVec3} s Scaling vector\r\n * @returns {mat4} out\r\n */\n\nexport function fromRotationTranslationScale(out, q, v, s) {\n  // Quaternion math\n  var x = q[0],\n      y = q[1],\n      z = q[2],\n      w = q[3];\n  var x2 = x + x;\n  var y2 = y + y;\n  var z2 = z + z;\n  var xx = x * x2;\n  var xy = x * y2;\n  var xz = x * z2;\n  var yy = y * y2;\n  var yz = y * z2;\n  var zz = z * z2;\n  var wx = w * x2;\n  var wy = w * y2;\n  var wz = w * z2;\n  var sx = s[0];\n  var sy = s[1];\n  var sz = s[2];\n  out[0] = (1 - (yy + zz)) * sx;\n  out[1] = (xy + wz) * sx;\n  out[2] = (xz - wy) * sx;\n  out[3] = 0;\n  out[4] = (xy - wz) * sy;\n  out[5] = (1 - (xx + zz)) * sy;\n  out[6] = (yz + wx) * sy;\n  out[7] = 0;\n  out[8] = (xz + wy) * sz;\n  out[9] = (yz - wx) * sz;\n  out[10] = (1 - (xx + yy)) * sz;\n  out[11] = 0;\n  out[12] = v[0];\n  out[13] = v[1];\n  out[14] = v[2];\n  out[15] = 1;\n  return out;\n}\n/**\r\n * Creates a matrix from a quaternion rotation, vector translation and vector scale, rotating and scaling around the given origin\r\n * This is equivalent to (but much faster than):\r\n *\r\n *     mat4.identity(dest);\r\n *     mat4.translate(dest, vec);\r\n *     mat4.translate(dest, origin);\r\n *     let quatMat = mat4.create();\r\n *     quat4.toMat4(quat, quatMat);\r\n *     mat4.multiply(dest, quatMat);\r\n *     mat4.scale(dest, scale)\r\n *     mat4.translate(dest, negativeOrigin);\r\n *\r\n * @param {mat4} out mat4 receiving operation result\r\n * @param {quat4} q Rotation quaternion\r\n * @param {ReadonlyVec3} v Translation vector\r\n * @param {ReadonlyVec3} s Scaling vector\r\n * @param {ReadonlyVec3} o The origin vector around which to scale and rotate\r\n * @returns {mat4} out\r\n */\n\nexport function fromRotationTranslationScaleOrigin(out, q, v, s, o) {\n  // Quaternion math\n  var x = q[0],\n      y = q[1],\n      z = q[2],\n      w = q[3];\n  var x2 = x + x;\n  var y2 = y + y;\n  var z2 = z + z;\n  var xx = x * x2;\n  var xy = x * y2;\n  var xz = x * z2;\n  var yy = y * y2;\n  var yz = y * z2;\n  var zz = z * z2;\n  var wx = w * x2;\n  var wy = w * y2;\n  var wz = w * z2;\n  var sx = s[0];\n  var sy = s[1];\n  var sz = s[2];\n  var ox = o[0];\n  var oy = o[1];\n  var oz = o[2];\n  var out0 = (1 - (yy + zz)) * sx;\n  var out1 = (xy + wz) * sx;\n  var out2 = (xz - wy) * sx;\n  var out4 = (xy - wz) * sy;\n  var out5 = (1 - (xx + zz)) * sy;\n  var out6 = (yz + wx) * sy;\n  var out8 = (xz + wy) * sz;\n  var out9 = (yz - wx) * sz;\n  var out10 = (1 - (xx + yy)) * sz;\n  out[0] = out0;\n  out[1] = out1;\n  out[2] = out2;\n  out[3] = 0;\n  out[4] = out4;\n  out[5] = out5;\n  out[6] = out6;\n  out[7] = 0;\n  out[8] = out8;\n  out[9] = out9;\n  out[10] = out10;\n  out[11] = 0;\n  out[12] = v[0] + ox - (out0 * ox + out4 * oy + out8 * oz);\n  out[13] = v[1] + oy - (out1 * ox + out5 * oy + out9 * oz);\n  out[14] = v[2] + oz - (out2 * ox + out6 * oy + out10 * oz);\n  out[15] = 1;\n  return out;\n}\n/**\r\n * Calculates a 4x4 matrix from the given quaternion\r\n *\r\n * @param {mat4} out mat4 receiving operation result\r\n * @param {ReadonlyQuat} q Quaternion to create matrix from\r\n *\r\n * @returns {mat4} out\r\n */\n\nexport function fromQuat(out, q) {\n  var x = q[0],\n      y = q[1],\n      z = q[2],\n      w = q[3];\n  var x2 = x + x;\n  var y2 = y + y;\n  var z2 = z + z;\n  var xx = x * x2;\n  var yx = y * x2;\n  var yy = y * y2;\n  var zx = z * x2;\n  var zy = z * y2;\n  var zz = z * z2;\n  var wx = w * x2;\n  var wy = w * y2;\n  var wz = w * z2;\n  out[0] = 1 - yy - zz;\n  out[1] = yx + wz;\n  out[2] = zx - wy;\n  out[3] = 0;\n  out[4] = yx - wz;\n  out[5] = 1 - xx - zz;\n  out[6] = zy + wx;\n  out[7] = 0;\n  out[8] = zx + wy;\n  out[9] = zy - wx;\n  out[10] = 1 - xx - yy;\n  out[11] = 0;\n  out[12] = 0;\n  out[13] = 0;\n  out[14] = 0;\n  out[15] = 1;\n  return out;\n}\n/**\r\n * Generates a frustum matrix with the given bounds\r\n *\r\n * @param {mat4} out mat4 frustum matrix will be written into\r\n * @param {Number} left Left bound of the frustum\r\n * @param {Number} right Right bound of the frustum\r\n * @param {Number} bottom Bottom bound of the frustum\r\n * @param {Number} top Top bound of the frustum\r\n * @param {Number} near Near bound of the frustum\r\n * @param {Number} far Far bound of the frustum\r\n * @returns {mat4} out\r\n */\n\nexport function frustum(out, left, right, bottom, top, near, far) {\n  var rl = 1 / (right - left);\n  var tb = 1 / (top - bottom);\n  var nf = 1 / (near - far);\n  out[0] = near * 2 * rl;\n  out[1] = 0;\n  out[2] = 0;\n  out[3] = 0;\n  out[4] = 0;\n  out[5] = near * 2 * tb;\n  out[6] = 0;\n  out[7] = 0;\n  out[8] = (right + left) * rl;\n  out[9] = (top + bottom) * tb;\n  out[10] = (far + near) * nf;\n  out[11] = -1;\n  out[12] = 0;\n  out[13] = 0;\n  out[14] = far * near * 2 * nf;\n  out[15] = 0;\n  return out;\n}\n/**\r\n * Generates a perspective projection matrix with the given bounds.\r\n * Passing null/undefined/no value for far will generate infinite projection matrix.\r\n *\r\n * @param {mat4} out mat4 frustum matrix will be written into\r\n * @param {number} fovy Vertical field of view in radians\r\n * @param {number} aspect Aspect ratio. typically viewport width/height\r\n * @param {number} near Near bound of the frustum\r\n * @param {number} far Far bound of the frustum, can be null or Infinity\r\n * @returns {mat4} out\r\n */\n\nexport function perspective(out, fovy, aspect, near, far) {\n  var f = 1.0 / Math.tan(fovy / 2),\n      nf;\n  out[0] = f / aspect;\n  out[1] = 0;\n  out[2] = 0;\n  out[3] = 0;\n  out[4] = 0;\n  out[5] = f;\n  out[6] = 0;\n  out[7] = 0;\n  out[8] = 0;\n  out[9] = 0;\n  out[11] = -1;\n  out[12] = 0;\n  out[13] = 0;\n  out[15] = 0;\n\n  if (far != null && far !== Infinity) {\n    nf = 1 / (near - far);\n    out[10] = (far + near) * nf;\n    out[14] = 2 * far * near * nf;\n  } else {\n    out[10] = -1;\n    out[14] = -2 * near;\n  }\n\n  return out;\n}\n/**\r\n * Generates a perspective projection matrix with the given field of view.\r\n * This is primarily useful for generating projection matrices to be used\r\n * with the still experiemental WebVR API.\r\n *\r\n * @param {mat4} out mat4 frustum matrix will be written into\r\n * @param {Object} fov Object containing the following values: upDegrees, downDegrees, leftDegrees, rightDegrees\r\n * @param {number} near Near bound of the frustum\r\n * @param {number} far Far bound of the frustum\r\n * @returns {mat4} out\r\n */\n\nexport function perspectiveFromFieldOfView(out, fov, near, far) {\n  var upTan = Math.tan(fov.upDegrees * Math.PI / 180.0);\n  var downTan = Math.tan(fov.downDegrees * Math.PI / 180.0);\n  var leftTan = Math.tan(fov.leftDegrees * Math.PI / 180.0);\n  var rightTan = Math.tan(fov.rightDegrees * Math.PI / 180.0);\n  var xScale = 2.0 / (leftTan + rightTan);\n  var yScale = 2.0 / (upTan + downTan);\n  out[0] = xScale;\n  out[1] = 0.0;\n  out[2] = 0.0;\n  out[3] = 0.0;\n  out[4] = 0.0;\n  out[5] = yScale;\n  out[6] = 0.0;\n  out[7] = 0.0;\n  out[8] = -((leftTan - rightTan) * xScale * 0.5);\n  out[9] = (upTan - downTan) * yScale * 0.5;\n  out[10] = far / (near - far);\n  out[11] = -1.0;\n  out[12] = 0.0;\n  out[13] = 0.0;\n  out[14] = far * near / (near - far);\n  out[15] = 0.0;\n  return out;\n}\n/**\r\n * Generates a orthogonal projection matrix with the given bounds\r\n *\r\n * @param {mat4} out mat4 frustum matrix will be written into\r\n * @param {number} left Left bound of the frustum\r\n * @param {number} right Right bound of the frustum\r\n * @param {number} bottom Bottom bound of the frustum\r\n * @param {number} top Top bound of the frustum\r\n * @param {number} near Near bound of the frustum\r\n * @param {number} far Far bound of the frustum\r\n * @returns {mat4} out\r\n */\n\nexport function ortho(out, left, right, bottom, top, near, far) {\n  var lr = 1 / (left - right);\n  var bt = 1 / (bottom - top);\n  var nf = 1 / (near - far);\n  out[0] = -2 * lr;\n  out[1] = 0;\n  out[2] = 0;\n  out[3] = 0;\n  out[4] = 0;\n  out[5] = -2 * bt;\n  out[6] = 0;\n  out[7] = 0;\n  out[8] = 0;\n  out[9] = 0;\n  out[10] = 2 * nf;\n  out[11] = 0;\n  out[12] = (left + right) * lr;\n  out[13] = (top + bottom) * bt;\n  out[14] = (far + near) * nf;\n  out[15] = 1;\n  return out;\n}\n/**\r\n * Generates a look-at matrix with the given eye position, focal point, and up axis.\r\n * If you want a matrix that actually makes an object look at another object, you should use targetTo instead.\r\n *\r\n * @param {mat4} out mat4 frustum matrix will be written into\r\n * @param {ReadonlyVec3} eye Position of the viewer\r\n * @param {ReadonlyVec3} center Point the viewer is looking at\r\n * @param {ReadonlyVec3} up vec3 pointing up\r\n * @returns {mat4} out\r\n */\n\nexport function lookAt(out, eye, center, up) {\n  var x0, x1, x2, y0, y1, y2, z0, z1, z2, len;\n  var eyex = eye[0];\n  var eyey = eye[1];\n  var eyez = eye[2];\n  var upx = up[0];\n  var upy = up[1];\n  var upz = up[2];\n  var centerx = center[0];\n  var centery = center[1];\n  var centerz = center[2];\n\n  if (Math.abs(eyex - centerx) < glMatrix.EPSILON && Math.abs(eyey - centery) < glMatrix.EPSILON && Math.abs(eyez - centerz) < glMatrix.EPSILON) {\n    return identity(out);\n  }\n\n  z0 = eyex - centerx;\n  z1 = eyey - centery;\n  z2 = eyez - centerz;\n  len = 1 / Math.hypot(z0, z1, z2);\n  z0 *= len;\n  z1 *= len;\n  z2 *= len;\n  x0 = upy * z2 - upz * z1;\n  x1 = upz * z0 - upx * z2;\n  x2 = upx * z1 - upy * z0;\n  len = Math.hypot(x0, x1, x2);\n\n  if (!len) {\n    x0 = 0;\n    x1 = 0;\n    x2 = 0;\n  } else {\n    len = 1 / len;\n    x0 *= len;\n    x1 *= len;\n    x2 *= len;\n  }\n\n  y0 = z1 * x2 - z2 * x1;\n  y1 = z2 * x0 - z0 * x2;\n  y2 = z0 * x1 - z1 * x0;\n  len = Math.hypot(y0, y1, y2);\n\n  if (!len) {\n    y0 = 0;\n    y1 = 0;\n    y2 = 0;\n  } else {\n    len = 1 / len;\n    y0 *= len;\n    y1 *= len;\n    y2 *= len;\n  }\n\n  out[0] = x0;\n  out[1] = y0;\n  out[2] = z0;\n  out[3] = 0;\n  out[4] = x1;\n  out[5] = y1;\n  out[6] = z1;\n  out[7] = 0;\n  out[8] = x2;\n  out[9] = y2;\n  out[10] = z2;\n  out[11] = 0;\n  out[12] = -(x0 * eyex + x1 * eyey + x2 * eyez);\n  out[13] = -(y0 * eyex + y1 * eyey + y2 * eyez);\n  out[14] = -(z0 * eyex + z1 * eyey + z2 * eyez);\n  out[15] = 1;\n  return out;\n}\n/**\r\n * Generates a matrix that makes something look at something else.\r\n *\r\n * @param {mat4} out mat4 frustum matrix will be written into\r\n * @param {ReadonlyVec3} eye Position of the viewer\r\n * @param {ReadonlyVec3} center Point the viewer is looking at\r\n * @param {ReadonlyVec3} up vec3 pointing up\r\n * @returns {mat4} out\r\n */\n\nexport function targetTo(out, eye, target, up) {\n  var eyex = eye[0],\n      eyey = eye[1],\n      eyez = eye[2],\n      upx = up[0],\n      upy = up[1],\n      upz = up[2];\n  var z0 = eyex - target[0],\n      z1 = eyey - target[1],\n      z2 = eyez - target[2];\n  var len = z0 * z0 + z1 * z1 + z2 * z2;\n\n  if (len > 0) {\n    len = 1 / Math.sqrt(len);\n    z0 *= len;\n    z1 *= len;\n    z2 *= len;\n  }\n\n  var x0 = upy * z2 - upz * z1,\n      x1 = upz * z0 - upx * z2,\n      x2 = upx * z1 - upy * z0;\n  len = x0 * x0 + x1 * x1 + x2 * x2;\n\n  if (len > 0) {\n    len = 1 / Math.sqrt(len);\n    x0 *= len;\n    x1 *= len;\n    x2 *= len;\n  }\n\n  out[0] = x0;\n  out[1] = x1;\n  out[2] = x2;\n  out[3] = 0;\n  out[4] = z1 * x2 - z2 * x1;\n  out[5] = z2 * x0 - z0 * x2;\n  out[6] = z0 * x1 - z1 * x0;\n  out[7] = 0;\n  out[8] = z0;\n  out[9] = z1;\n  out[10] = z2;\n  out[11] = 0;\n  out[12] = eyex;\n  out[13] = eyey;\n  out[14] = eyez;\n  out[15] = 1;\n  return out;\n}\n/**\r\n * Returns a string representation of a mat4\r\n *\r\n * @param {ReadonlyMat4} a matrix to represent as a string\r\n * @returns {String} string representation of the matrix\r\n */\n\nexport function str(a) {\n  return \"mat4(\" + a[0] + \", \" + a[1] + \", \" + a[2] + \", \" + a[3] + \", \" + a[4] + \", \" + a[5] + \", \" + a[6] + \", \" + a[7] + \", \" + a[8] + \", \" + a[9] + \", \" + a[10] + \", \" + a[11] + \", \" + a[12] + \", \" + a[13] + \", \" + a[14] + \", \" + a[15] + \")\";\n}\n/**\r\n * Returns Frobenius norm of a mat4\r\n *\r\n * @param {ReadonlyMat4} a the matrix to calculate Frobenius norm of\r\n * @returns {Number} Frobenius norm\r\n */\n\nexport function frob(a) {\n  return Math.hypot(a[0], a[1], a[2], a[3], a[4], a[5], a[6], a[7], a[8], a[9], a[10], a[11], a[12], a[13], a[14], a[15]);\n}\n/**\r\n * Adds two mat4's\r\n *\r\n * @param {mat4} out the receiving matrix\r\n * @param {ReadonlyMat4} a the first operand\r\n * @param {ReadonlyMat4} b the second operand\r\n * @returns {mat4} out\r\n */\n\nexport function add(out, a, b) {\n  out[0] = a[0] + b[0];\n  out[1] = a[1] + b[1];\n  out[2] = a[2] + b[2];\n  out[3] = a[3] + b[3];\n  out[4] = a[4] + b[4];\n  out[5] = a[5] + b[5];\n  out[6] = a[6] + b[6];\n  out[7] = a[7] + b[7];\n  out[8] = a[8] + b[8];\n  out[9] = a[9] + b[9];\n  out[10] = a[10] + b[10];\n  out[11] = a[11] + b[11];\n  out[12] = a[12] + b[12];\n  out[13] = a[13] + b[13];\n  out[14] = a[14] + b[14];\n  out[15] = a[15] + b[15];\n  return out;\n}\n/**\r\n * Subtracts matrix b from matrix a\r\n *\r\n * @param {mat4} out the receiving matrix\r\n * @param {ReadonlyMat4} a the first operand\r\n * @param {ReadonlyMat4} b the second operand\r\n * @returns {mat4} out\r\n */\n\nexport function subtract(out, a, b) {\n  out[0] = a[0] - b[0];\n  out[1] = a[1] - b[1];\n  out[2] = a[2] - b[2];\n  out[3] = a[3] - b[3];\n  out[4] = a[4] - b[4];\n  out[5] = a[5] - b[5];\n  out[6] = a[6] - b[6];\n  out[7] = a[7] - b[7];\n  out[8] = a[8] - b[8];\n  out[9] = a[9] - b[9];\n  out[10] = a[10] - b[10];\n  out[11] = a[11] - b[11];\n  out[12] = a[12] - b[12];\n  out[13] = a[13] - b[13];\n  out[14] = a[14] - b[14];\n  out[15] = a[15] - b[15];\n  return out;\n}\n/**\r\n * Multiply each element of the matrix by a scalar.\r\n *\r\n * @param {mat4} out the receiving matrix\r\n * @param {ReadonlyMat4} a the matrix to scale\r\n * @param {Number} b amount to scale the matrix's elements by\r\n * @returns {mat4} out\r\n */\n\nexport function multiplyScalar(out, a, b) {\n  out[0] = a[0] * b;\n  out[1] = a[1] * b;\n  out[2] = a[2] * b;\n  out[3] = a[3] * b;\n  out[4] = a[4] * b;\n  out[5] = a[5] * b;\n  out[6] = a[6] * b;\n  out[7] = a[7] * b;\n  out[8] = a[8] * b;\n  out[9] = a[9] * b;\n  out[10] = a[10] * b;\n  out[11] = a[11] * b;\n  out[12] = a[12] * b;\n  out[13] = a[13] * b;\n  out[14] = a[14] * b;\n  out[15] = a[15] * b;\n  return out;\n}\n/**\r\n * Adds two mat4's after multiplying each element of the second operand by a scalar value.\r\n *\r\n * @param {mat4} out the receiving vector\r\n * @param {ReadonlyMat4} a the first operand\r\n * @param {ReadonlyMat4} b the second operand\r\n * @param {Number} scale the amount to scale b's elements by before adding\r\n * @returns {mat4} out\r\n */\n\nexport function multiplyScalarAndAdd(out, a, b, scale) {\n  out[0] = a[0] + b[0] * scale;\n  out[1] = a[1] + b[1] * scale;\n  out[2] = a[2] + b[2] * scale;\n  out[3] = a[3] + b[3] * scale;\n  out[4] = a[4] + b[4] * scale;\n  out[5] = a[5] + b[5] * scale;\n  out[6] = a[6] + b[6] * scale;\n  out[7] = a[7] + b[7] * scale;\n  out[8] = a[8] + b[8] * scale;\n  out[9] = a[9] + b[9] * scale;\n  out[10] = a[10] + b[10] * scale;\n  out[11] = a[11] + b[11] * scale;\n  out[12] = a[12] + b[12] * scale;\n  out[13] = a[13] + b[13] * scale;\n  out[14] = a[14] + b[14] * scale;\n  out[15] = a[15] + b[15] * scale;\n  return out;\n}\n/**\r\n * Returns whether or not the matrices have exactly the same elements in the same position (when compared with ===)\r\n *\r\n * @param {ReadonlyMat4} a The first matrix.\r\n * @param {ReadonlyMat4} b The second matrix.\r\n * @returns {Boolean} True if the matrices are equal, false otherwise.\r\n */\n\nexport function exactEquals(a, b) {\n  return a[0] === b[0] && a[1] === b[1] && a[2] === b[2] && a[3] === b[3] && a[4] === b[4] && a[5] === b[5] && a[6] === b[6] && a[7] === b[7] && a[8] === b[8] && a[9] === b[9] && a[10] === b[10] && a[11] === b[11] && a[12] === b[12] && a[13] === b[13] && a[14] === b[14] && a[15] === b[15];\n}\n/**\r\n * Returns whether or not the matrices have approximately the same elements in the same position.\r\n *\r\n * @param {ReadonlyMat4} a The first matrix.\r\n * @param {ReadonlyMat4} b The second matrix.\r\n * @returns {Boolean} True if the matrices are equal, false otherwise.\r\n */\n\nexport function equals(a, b) {\n  var a0 = a[0],\n      a1 = a[1],\n      a2 = a[2],\n      a3 = a[3];\n  var a4 = a[4],\n      a5 = a[5],\n      a6 = a[6],\n      a7 = a[7];\n  var a8 = a[8],\n      a9 = a[9],\n      a10 = a[10],\n      a11 = a[11];\n  var a12 = a[12],\n      a13 = a[13],\n      a14 = a[14],\n      a15 = a[15];\n  var b0 = b[0],\n      b1 = b[1],\n      b2 = b[2],\n      b3 = b[3];\n  var b4 = b[4],\n      b5 = b[5],\n      b6 = b[6],\n      b7 = b[7];\n  var b8 = b[8],\n      b9 = b[9],\n      b10 = b[10],\n      b11 = b[11];\n  var b12 = b[12],\n      b13 = b[13],\n      b14 = b[14],\n      b15 = b[15];\n  return Math.abs(a0 - b0) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a0), Math.abs(b0)) && Math.abs(a1 - b1) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a1), Math.abs(b1)) && Math.abs(a2 - b2) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a2), Math.abs(b2)) && Math.abs(a3 - b3) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a3), Math.abs(b3)) && Math.abs(a4 - b4) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a4), Math.abs(b4)) && Math.abs(a5 - b5) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a5), Math.abs(b5)) && Math.abs(a6 - b6) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a6), Math.abs(b6)) && Math.abs(a7 - b7) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a7), Math.abs(b7)) && Math.abs(a8 - b8) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a8), Math.abs(b8)) && Math.abs(a9 - b9) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a9), Math.abs(b9)) && Math.abs(a10 - b10) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a10), Math.abs(b10)) && Math.abs(a11 - b11) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a11), Math.abs(b11)) && Math.abs(a12 - b12) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a12), Math.abs(b12)) && Math.abs(a13 - b13) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a13), Math.abs(b13)) && Math.abs(a14 - b14) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a14), Math.abs(b14)) && Math.abs(a15 - b15) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a15), Math.abs(b15));\n}\n/**\r\n * Alias for {@link mat4.multiply}\r\n * @function\r\n */\n\nexport var mul = multiply;\n/**\r\n * Alias for {@link mat4.subtract}\r\n * @function\r\n */\n\nexport var sub = subtract;","import * as glMatrix from \"./common.js\";\n/**\r\n * 2 Dimensional Vector\r\n * @module vec2\r\n */\n\n/**\r\n * Creates a new, empty vec2\r\n *\r\n * @returns {vec2} a new 2D vector\r\n */\n\nexport function create() {\n  var out = new glMatrix.ARRAY_TYPE(2);\n\n  if (glMatrix.ARRAY_TYPE != Float32Array) {\n    out[0] = 0;\n    out[1] = 0;\n  }\n\n  return out;\n}\n/**\r\n * Creates a new vec2 initialized with values from an existing vector\r\n *\r\n * @param {ReadonlyVec2} a vector to clone\r\n * @returns {vec2} a new 2D vector\r\n */\n\nexport function clone(a) {\n  var out = new glMatrix.ARRAY_TYPE(2);\n  out[0] = a[0];\n  out[1] = a[1];\n  return out;\n}\n/**\r\n * Creates a new vec2 initialized with the given values\r\n *\r\n * @param {Number} x X component\r\n * @param {Number} y Y component\r\n * @returns {vec2} a new 2D vector\r\n */\n\nexport function fromValues(x, y) {\n  var out = new glMatrix.ARRAY_TYPE(2);\n  out[0] = x;\n  out[1] = y;\n  return out;\n}\n/**\r\n * Copy the values from one vec2 to another\r\n *\r\n * @param {vec2} out the receiving vector\r\n * @param {ReadonlyVec2} a the source vector\r\n * @returns {vec2} out\r\n */\n\nexport function copy(out, a) {\n  out[0] = a[0];\n  out[1] = a[1];\n  return out;\n}\n/**\r\n * Set the components of a vec2 to the given values\r\n *\r\n * @param {vec2} out the receiving vector\r\n * @param {Number} x X component\r\n * @param {Number} y Y component\r\n * @returns {vec2} out\r\n */\n\nexport function set(out, x, y) {\n  out[0] = x;\n  out[1] = y;\n  return out;\n}\n/**\r\n * Adds two vec2's\r\n *\r\n * @param {vec2} out the receiving vector\r\n * @param {ReadonlyVec2} a the first operand\r\n * @param {ReadonlyVec2} b the second operand\r\n * @returns {vec2} out\r\n */\n\nexport function add(out, a, b) {\n  out[0] = a[0] + b[0];\n  out[1] = a[1] + b[1];\n  return out;\n}\n/**\r\n * Subtracts vector b from vector a\r\n *\r\n * @param {vec2} out the receiving vector\r\n * @param {ReadonlyVec2} a the first operand\r\n * @param {ReadonlyVec2} b the second operand\r\n * @returns {vec2} out\r\n */\n\nexport function subtract(out, a, b) {\n  out[0] = a[0] - b[0];\n  out[1] = a[1] - b[1];\n  return out;\n}\n/**\r\n * Multiplies two vec2's\r\n *\r\n * @param {vec2} out the receiving vector\r\n * @param {ReadonlyVec2} a the first operand\r\n * @param {ReadonlyVec2} b the second operand\r\n * @returns {vec2} out\r\n */\n\nexport function multiply(out, a, b) {\n  out[0] = a[0] * b[0];\n  out[1] = a[1] * b[1];\n  return out;\n}\n/**\r\n * Divides two vec2's\r\n *\r\n * @param {vec2} out the receiving vector\r\n * @param {ReadonlyVec2} a the first operand\r\n * @param {ReadonlyVec2} b the second operand\r\n * @returns {vec2} out\r\n */\n\nexport function divide(out, a, b) {\n  out[0] = a[0] / b[0];\n  out[1] = a[1] / b[1];\n  return out;\n}\n/**\r\n * Math.ceil the components of a vec2\r\n *\r\n * @param {vec2} out the receiving vector\r\n * @param {ReadonlyVec2} a vector to ceil\r\n * @returns {vec2} out\r\n */\n\nexport function ceil(out, a) {\n  out[0] = Math.ceil(a[0]);\n  out[1] = Math.ceil(a[1]);\n  return out;\n}\n/**\r\n * Math.floor the components of a vec2\r\n *\r\n * @param {vec2} out the receiving vector\r\n * @param {ReadonlyVec2} a vector to floor\r\n * @returns {vec2} out\r\n */\n\nexport function floor(out, a) {\n  out[0] = Math.floor(a[0]);\n  out[1] = Math.floor(a[1]);\n  return out;\n}\n/**\r\n * Returns the minimum of two vec2's\r\n *\r\n * @param {vec2} out the receiving vector\r\n * @param {ReadonlyVec2} a the first operand\r\n * @param {ReadonlyVec2} b the second operand\r\n * @returns {vec2} out\r\n */\n\nexport function min(out, a, b) {\n  out[0] = Math.min(a[0], b[0]);\n  out[1] = Math.min(a[1], b[1]);\n  return out;\n}\n/**\r\n * Returns the maximum of two vec2's\r\n *\r\n * @param {vec2} out the receiving vector\r\n * @param {ReadonlyVec2} a the first operand\r\n * @param {ReadonlyVec2} b the second operand\r\n * @returns {vec2} out\r\n */\n\nexport function max(out, a, b) {\n  out[0] = Math.max(a[0], b[0]);\n  out[1] = Math.max(a[1], b[1]);\n  return out;\n}\n/**\r\n * Math.round the components of a vec2\r\n *\r\n * @param {vec2} out the receiving vector\r\n * @param {ReadonlyVec2} a vector to round\r\n * @returns {vec2} out\r\n */\n\nexport function round(out, a) {\n  out[0] = Math.round(a[0]);\n  out[1] = Math.round(a[1]);\n  return out;\n}\n/**\r\n * Scales a vec2 by a scalar number\r\n *\r\n * @param {vec2} out the receiving vector\r\n * @param {ReadonlyVec2} a the vector to scale\r\n * @param {Number} b amount to scale the vector by\r\n * @returns {vec2} out\r\n */\n\nexport function scale(out, a, b) {\n  out[0] = a[0] * b;\n  out[1] = a[1] * b;\n  return out;\n}\n/**\r\n * Adds two vec2's after scaling the second operand by a scalar value\r\n *\r\n * @param {vec2} out the receiving vector\r\n * @param {ReadonlyVec2} a the first operand\r\n * @param {ReadonlyVec2} b the second operand\r\n * @param {Number} scale the amount to scale b by before adding\r\n * @returns {vec2} out\r\n */\n\nexport function scaleAndAdd(out, a, b, scale) {\n  out[0] = a[0] + b[0] * scale;\n  out[1] = a[1] + b[1] * scale;\n  return out;\n}\n/**\r\n * Calculates the euclidian distance between two vec2's\r\n *\r\n * @param {ReadonlyVec2} a the first operand\r\n * @param {ReadonlyVec2} b the second operand\r\n * @returns {Number} distance between a and b\r\n */\n\nexport function distance(a, b) {\n  var x = b[0] - a[0],\n      y = b[1] - a[1];\n  return Math.hypot(x, y);\n}\n/**\r\n * Calculates the squared euclidian distance between two vec2's\r\n *\r\n * @param {ReadonlyVec2} a the first operand\r\n * @param {ReadonlyVec2} b the second operand\r\n * @returns {Number} squared distance between a and b\r\n */\n\nexport function squaredDistance(a, b) {\n  var x = b[0] - a[0],\n      y = b[1] - a[1];\n  return x * x + y * y;\n}\n/**\r\n * Calculates the length of a vec2\r\n *\r\n * @param {ReadonlyVec2} a vector to calculate length of\r\n * @returns {Number} length of a\r\n */\n\nexport function length(a) {\n  var x = a[0],\n      y = a[1];\n  return Math.hypot(x, y);\n}\n/**\r\n * Calculates the squared length of a vec2\r\n *\r\n * @param {ReadonlyVec2} a vector to calculate squared length of\r\n * @returns {Number} squared length of a\r\n */\n\nexport function squaredLength(a) {\n  var x = a[0],\n      y = a[1];\n  return x * x + y * y;\n}\n/**\r\n * Negates the components of a vec2\r\n *\r\n * @param {vec2} out the receiving vector\r\n * @param {ReadonlyVec2} a vector to negate\r\n * @returns {vec2} out\r\n */\n\nexport function negate(out, a) {\n  out[0] = -a[0];\n  out[1] = -a[1];\n  return out;\n}\n/**\r\n * Returns the inverse of the components of a vec2\r\n *\r\n * @param {vec2} out the receiving vector\r\n * @param {ReadonlyVec2} a vector to invert\r\n * @returns {vec2} out\r\n */\n\nexport function inverse(out, a) {\n  out[0] = 1.0 / a[0];\n  out[1] = 1.0 / a[1];\n  return out;\n}\n/**\r\n * Normalize a vec2\r\n *\r\n * @param {vec2} out the receiving vector\r\n * @param {ReadonlyVec2} a vector to normalize\r\n * @returns {vec2} out\r\n */\n\nexport function normalize(out, a) {\n  var x = a[0],\n      y = a[1];\n  var len = x * x + y * y;\n\n  if (len > 0) {\n    //TODO: evaluate use of glm_invsqrt here?\n    len = 1 / Math.sqrt(len);\n  }\n\n  out[0] = a[0] * len;\n  out[1] = a[1] * len;\n  return out;\n}\n/**\r\n * Calculates the dot product of two vec2's\r\n *\r\n * @param {ReadonlyVec2} a the first operand\r\n * @param {ReadonlyVec2} b the second operand\r\n * @returns {Number} dot product of a and b\r\n */\n\nexport function dot(a, b) {\n  return a[0] * b[0] + a[1] * b[1];\n}\n/**\r\n * Computes the cross product of two vec2's\r\n * Note that the cross product must by definition produce a 3D vector\r\n *\r\n * @param {vec3} out the receiving vector\r\n * @param {ReadonlyVec2} a the first operand\r\n * @param {ReadonlyVec2} b the second operand\r\n * @returns {vec3} out\r\n */\n\nexport function cross(out, a, b) {\n  var z = a[0] * b[1] - a[1] * b[0];\n  out[0] = out[1] = 0;\n  out[2] = z;\n  return out;\n}\n/**\r\n * Performs a linear interpolation between two vec2's\r\n *\r\n * @param {vec2} out the receiving vector\r\n * @param {ReadonlyVec2} a the first operand\r\n * @param {ReadonlyVec2} b the second operand\r\n * @param {Number} t interpolation amount, in the range [0-1], between the two inputs\r\n * @returns {vec2} out\r\n */\n\nexport function lerp(out, a, b, t) {\n  var ax = a[0],\n      ay = a[1];\n  out[0] = ax + t * (b[0] - ax);\n  out[1] = ay + t * (b[1] - ay);\n  return out;\n}\n/**\r\n * Generates a random vector with the given scale\r\n *\r\n * @param {vec2} out the receiving vector\r\n * @param {Number} [scale] Length of the resulting vector. If ommitted, a unit vector will be returned\r\n * @returns {vec2} out\r\n */\n\nexport function random(out, scale) {\n  scale = scale || 1.0;\n  var r = glMatrix.RANDOM() * 2.0 * Math.PI;\n  out[0] = Math.cos(r) * scale;\n  out[1] = Math.sin(r) * scale;\n  return out;\n}\n/**\r\n * Transforms the vec2 with a mat2\r\n *\r\n * @param {vec2} out the receiving vector\r\n * @param {ReadonlyVec2} a the vector to transform\r\n * @param {ReadonlyMat2} m matrix to transform with\r\n * @returns {vec2} out\r\n */\n\nexport function transformMat2(out, a, m) {\n  var x = a[0],\n      y = a[1];\n  out[0] = m[0] * x + m[2] * y;\n  out[1] = m[1] * x + m[3] * y;\n  return out;\n}\n/**\r\n * Transforms the vec2 with a mat2d\r\n *\r\n * @param {vec2} out the receiving vector\r\n * @param {ReadonlyVec2} a the vector to transform\r\n * @param {ReadonlyMat2d} m matrix to transform with\r\n * @returns {vec2} out\r\n */\n\nexport function transformMat2d(out, a, m) {\n  var x = a[0],\n      y = a[1];\n  out[0] = m[0] * x + m[2] * y + m[4];\n  out[1] = m[1] * x + m[3] * y + m[5];\n  return out;\n}\n/**\r\n * Transforms the vec2 with a mat3\r\n * 3rd vector component is implicitly '1'\r\n *\r\n * @param {vec2} out the receiving vector\r\n * @param {ReadonlyVec2} a the vector to transform\r\n * @param {ReadonlyMat3} m matrix to transform with\r\n * @returns {vec2} out\r\n */\n\nexport function transformMat3(out, a, m) {\n  var x = a[0],\n      y = a[1];\n  out[0] = m[0] * x + m[3] * y + m[6];\n  out[1] = m[1] * x + m[4] * y + m[7];\n  return out;\n}\n/**\r\n * Transforms the vec2 with a mat4\r\n * 3rd vector component is implicitly '0'\r\n * 4th vector component is implicitly '1'\r\n *\r\n * @param {vec2} out the receiving vector\r\n * @param {ReadonlyVec2} a the vector to transform\r\n * @param {ReadonlyMat4} m matrix to transform with\r\n * @returns {vec2} out\r\n */\n\nexport function transformMat4(out, a, m) {\n  var x = a[0];\n  var y = a[1];\n  out[0] = m[0] * x + m[4] * y + m[12];\n  out[1] = m[1] * x + m[5] * y + m[13];\n  return out;\n}\n/**\r\n * Rotate a 2D vector\r\n * @param {vec2} out The receiving vec2\r\n * @param {ReadonlyVec2} a The vec2 point to rotate\r\n * @param {ReadonlyVec2} b The origin of the rotation\r\n * @param {Number} rad The angle of rotation in radians\r\n * @returns {vec2} out\r\n */\n\nexport function rotate(out, a, b, rad) {\n  //Translate point to the origin\n  var p0 = a[0] - b[0],\n      p1 = a[1] - b[1],\n      sinC = Math.sin(rad),\n      cosC = Math.cos(rad); //perform rotation and translate to correct position\n\n  out[0] = p0 * cosC - p1 * sinC + b[0];\n  out[1] = p0 * sinC + p1 * cosC + b[1];\n  return out;\n}\n/**\r\n * Get the angle between two 2D vectors\r\n * @param {ReadonlyVec2} a The first operand\r\n * @param {ReadonlyVec2} b The second operand\r\n * @returns {Number} The angle in radians\r\n */\n\nexport function angle(a, b) {\n  var x1 = a[0],\n      y1 = a[1],\n      x2 = b[0],\n      y2 = b[1],\n      // mag is the product of the magnitudes of a and b\n  mag = Math.sqrt(x1 * x1 + y1 * y1) * Math.sqrt(x2 * x2 + y2 * y2),\n      // mag &&.. short circuits if mag == 0\n  cosine = mag && (x1 * x2 + y1 * y2) / mag; // Math.min(Math.max(cosine, -1), 1) clamps the cosine between -1 and 1\n\n  return Math.acos(Math.min(Math.max(cosine, -1), 1));\n}\n/**\r\n * Set the components of a vec2 to zero\r\n *\r\n * @param {vec2} out the receiving vector\r\n * @returns {vec2} out\r\n */\n\nexport function zero(out) {\n  out[0] = 0.0;\n  out[1] = 0.0;\n  return out;\n}\n/**\r\n * Returns a string representation of a vector\r\n *\r\n * @param {ReadonlyVec2} a vector to represent as a string\r\n * @returns {String} string representation of the vector\r\n */\n\nexport function str(a) {\n  return \"vec2(\" + a[0] + \", \" + a[1] + \")\";\n}\n/**\r\n * Returns whether or not the vectors exactly have the same elements in the same position (when compared with ===)\r\n *\r\n * @param {ReadonlyVec2} a The first vector.\r\n * @param {ReadonlyVec2} b The second vector.\r\n * @returns {Boolean} True if the vectors are equal, false otherwise.\r\n */\n\nexport function exactEquals(a, b) {\n  return a[0] === b[0] && a[1] === b[1];\n}\n/**\r\n * Returns whether or not the vectors have approximately the same elements in the same position.\r\n *\r\n * @param {ReadonlyVec2} a The first vector.\r\n * @param {ReadonlyVec2} b The second vector.\r\n * @returns {Boolean} True if the vectors are equal, false otherwise.\r\n */\n\nexport function equals(a, b) {\n  var a0 = a[0],\n      a1 = a[1];\n  var b0 = b[0],\n      b1 = b[1];\n  return Math.abs(a0 - b0) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a0), Math.abs(b0)) && Math.abs(a1 - b1) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a1), Math.abs(b1));\n}\n/**\r\n * Alias for {@link vec2.length}\r\n * @function\r\n */\n\nexport var len = length;\n/**\r\n * Alias for {@link vec2.subtract}\r\n * @function\r\n */\n\nexport var sub = subtract;\n/**\r\n * Alias for {@link vec2.multiply}\r\n * @function\r\n */\n\nexport var mul = multiply;\n/**\r\n * Alias for {@link vec2.divide}\r\n * @function\r\n */\n\nexport var div = divide;\n/**\r\n * Alias for {@link vec2.distance}\r\n * @function\r\n */\n\nexport var dist = distance;\n/**\r\n * Alias for {@link vec2.squaredDistance}\r\n * @function\r\n */\n\nexport var sqrDist = squaredDistance;\n/**\r\n * Alias for {@link vec2.squaredLength}\r\n * @function\r\n */\n\nexport var sqrLen = squaredLength;\n/**\r\n * Perform some operation over an array of vec2s.\r\n *\r\n * @param {Array} a the array of vectors to iterate over\r\n * @param {Number} stride Number of elements between the start of each vec2. If 0 assumes tightly packed\r\n * @param {Number} offset Number of elements to skip at the beginning of the array\r\n * @param {Number} count Number of vec2s to iterate over. If 0 iterates over entire array\r\n * @param {Function} fn Function to call for each vector in the array\r\n * @param {Object} [arg] additional argument to pass to fn\r\n * @returns {Array} a\r\n * @function\r\n */\n\nexport var forEach = function () {\n  var vec = create();\n  return function (a, stride, offset, count, fn, arg) {\n    var i, l;\n\n    if (!stride) {\n      stride = 2;\n    }\n\n    if (!offset) {\n      offset = 0;\n    }\n\n    if (count) {\n      l = Math.min(count * stride + offset, a.length);\n    } else {\n      l = a.length;\n    }\n\n    for (i = offset; i < l; i += stride) {\n      vec[0] = a[i];\n      vec[1] = a[i + 1];\n      fn(vec, vec, arg);\n      a[i] = vec[0];\n      a[i + 1] = vec[1];\n    }\n\n    return a;\n  };\n}();","import * as glMatrix from \"./common.js\";\n/**\r\n * 3 Dimensional Vector\r\n * @module vec3\r\n */\n\n/**\r\n * Creates a new, empty vec3\r\n *\r\n * @returns {vec3} a new 3D vector\r\n */\n\nexport function create() {\n  var out = new glMatrix.ARRAY_TYPE(3);\n\n  if (glMatrix.ARRAY_TYPE != Float32Array) {\n    out[0] = 0;\n    out[1] = 0;\n    out[2] = 0;\n  }\n\n  return out;\n}\n/**\r\n * Creates a new vec3 initialized with values from an existing vector\r\n *\r\n * @param {ReadonlyVec3} a vector to clone\r\n * @returns {vec3} a new 3D vector\r\n */\n\nexport function clone(a) {\n  var out = new glMatrix.ARRAY_TYPE(3);\n  out[0] = a[0];\n  out[1] = a[1];\n  out[2] = a[2];\n  return out;\n}\n/**\r\n * Calculates the length of a vec3\r\n *\r\n * @param {ReadonlyVec3} a vector to calculate length of\r\n * @returns {Number} length of a\r\n */\n\nexport function length(a) {\n  var x = a[0];\n  var y = a[1];\n  var z = a[2];\n  return Math.hypot(x, y, z);\n}\n/**\r\n * Creates a new vec3 initialized with the given values\r\n *\r\n * @param {Number} x X component\r\n * @param {Number} y Y component\r\n * @param {Number} z Z component\r\n * @returns {vec3} a new 3D vector\r\n */\n\nexport function fromValues(x, y, z) {\n  var out = new glMatrix.ARRAY_TYPE(3);\n  out[0] = x;\n  out[1] = y;\n  out[2] = z;\n  return out;\n}\n/**\r\n * Copy the values from one vec3 to another\r\n *\r\n * @param {vec3} out the receiving vector\r\n * @param {ReadonlyVec3} a the source vector\r\n * @returns {vec3} out\r\n */\n\nexport function copy(out, a) {\n  out[0] = a[0];\n  out[1] = a[1];\n  out[2] = a[2];\n  return out;\n}\n/**\r\n * Set the components of a vec3 to the given values\r\n *\r\n * @param {vec3} out the receiving vector\r\n * @param {Number} x X component\r\n * @param {Number} y Y component\r\n * @param {Number} z Z component\r\n * @returns {vec3} out\r\n */\n\nexport function set(out, x, y, z) {\n  out[0] = x;\n  out[1] = y;\n  out[2] = z;\n  return out;\n}\n/**\r\n * Adds two vec3's\r\n *\r\n * @param {vec3} out the receiving vector\r\n * @param {ReadonlyVec3} a the first operand\r\n * @param {ReadonlyVec3} b the second operand\r\n * @returns {vec3} out\r\n */\n\nexport function add(out, a, b) {\n  out[0] = a[0] + b[0];\n  out[1] = a[1] + b[1];\n  out[2] = a[2] + b[2];\n  return out;\n}\n/**\r\n * Subtracts vector b from vector a\r\n *\r\n * @param {vec3} out the receiving vector\r\n * @param {ReadonlyVec3} a the first operand\r\n * @param {ReadonlyVec3} b the second operand\r\n * @returns {vec3} out\r\n */\n\nexport function subtract(out, a, b) {\n  out[0] = a[0] - b[0];\n  out[1] = a[1] - b[1];\n  out[2] = a[2] - b[2];\n  return out;\n}\n/**\r\n * Multiplies two vec3's\r\n *\r\n * @param {vec3} out the receiving vector\r\n * @param {ReadonlyVec3} a the first operand\r\n * @param {ReadonlyVec3} b the second operand\r\n * @returns {vec3} out\r\n */\n\nexport function multiply(out, a, b) {\n  out[0] = a[0] * b[0];\n  out[1] = a[1] * b[1];\n  out[2] = a[2] * b[2];\n  return out;\n}\n/**\r\n * Divides two vec3's\r\n *\r\n * @param {vec3} out the receiving vector\r\n * @param {ReadonlyVec3} a the first operand\r\n * @param {ReadonlyVec3} b the second operand\r\n * @returns {vec3} out\r\n */\n\nexport function divide(out, a, b) {\n  out[0] = a[0] / b[0];\n  out[1] = a[1] / b[1];\n  out[2] = a[2] / b[2];\n  return out;\n}\n/**\r\n * Math.ceil the components of a vec3\r\n *\r\n * @param {vec3} out the receiving vector\r\n * @param {ReadonlyVec3} a vector to ceil\r\n * @returns {vec3} out\r\n */\n\nexport function ceil(out, a) {\n  out[0] = Math.ceil(a[0]);\n  out[1] = Math.ceil(a[1]);\n  out[2] = Math.ceil(a[2]);\n  return out;\n}\n/**\r\n * Math.floor the components of a vec3\r\n *\r\n * @param {vec3} out the receiving vector\r\n * @param {ReadonlyVec3} a vector to floor\r\n * @returns {vec3} out\r\n */\n\nexport function floor(out, a) {\n  out[0] = Math.floor(a[0]);\n  out[1] = Math.floor(a[1]);\n  out[2] = Math.floor(a[2]);\n  return out;\n}\n/**\r\n * Returns the minimum of two vec3's\r\n *\r\n * @param {vec3} out the receiving vector\r\n * @param {ReadonlyVec3} a the first operand\r\n * @param {ReadonlyVec3} b the second operand\r\n * @returns {vec3} out\r\n */\n\nexport function min(out, a, b) {\n  out[0] = Math.min(a[0], b[0]);\n  out[1] = Math.min(a[1], b[1]);\n  out[2] = Math.min(a[2], b[2]);\n  return out;\n}\n/**\r\n * Returns the maximum of two vec3's\r\n *\r\n * @param {vec3} out the receiving vector\r\n * @param {ReadonlyVec3} a the first operand\r\n * @param {ReadonlyVec3} b the second operand\r\n * @returns {vec3} out\r\n */\n\nexport function max(out, a, b) {\n  out[0] = Math.max(a[0], b[0]);\n  out[1] = Math.max(a[1], b[1]);\n  out[2] = Math.max(a[2], b[2]);\n  return out;\n}\n/**\r\n * Math.round the components of a vec3\r\n *\r\n * @param {vec3} out the receiving vector\r\n * @param {ReadonlyVec3} a vector to round\r\n * @returns {vec3} out\r\n */\n\nexport function round(out, a) {\n  out[0] = Math.round(a[0]);\n  out[1] = Math.round(a[1]);\n  out[2] = Math.round(a[2]);\n  return out;\n}\n/**\r\n * Scales a vec3 by a scalar number\r\n *\r\n * @param {vec3} out the receiving vector\r\n * @param {ReadonlyVec3} a the vector to scale\r\n * @param {Number} b amount to scale the vector by\r\n * @returns {vec3} out\r\n */\n\nexport function scale(out, a, b) {\n  out[0] = a[0] * b;\n  out[1] = a[1] * b;\n  out[2] = a[2] * b;\n  return out;\n}\n/**\r\n * Adds two vec3's after scaling the second operand by a scalar value\r\n *\r\n * @param {vec3} out the receiving vector\r\n * @param {ReadonlyVec3} a the first operand\r\n * @param {ReadonlyVec3} b the second operand\r\n * @param {Number} scale the amount to scale b by before adding\r\n * @returns {vec3} out\r\n */\n\nexport function scaleAndAdd(out, a, b, scale) {\n  out[0] = a[0] + b[0] * scale;\n  out[1] = a[1] + b[1] * scale;\n  out[2] = a[2] + b[2] * scale;\n  return out;\n}\n/**\r\n * Calculates the euclidian distance between two vec3's\r\n *\r\n * @param {ReadonlyVec3} a the first operand\r\n * @param {ReadonlyVec3} b the second operand\r\n * @returns {Number} distance between a and b\r\n */\n\nexport function distance(a, b) {\n  var x = b[0] - a[0];\n  var y = b[1] - a[1];\n  var z = b[2] - a[2];\n  return Math.hypot(x, y, z);\n}\n/**\r\n * Calculates the squared euclidian distance between two vec3's\r\n *\r\n * @param {ReadonlyVec3} a the first operand\r\n * @param {ReadonlyVec3} b the second operand\r\n * @returns {Number} squared distance between a and b\r\n */\n\nexport function squaredDistance(a, b) {\n  var x = b[0] - a[0];\n  var y = b[1] - a[1];\n  var z = b[2] - a[2];\n  return x * x + y * y + z * z;\n}\n/**\r\n * Calculates the squared length of a vec3\r\n *\r\n * @param {ReadonlyVec3} a vector to calculate squared length of\r\n * @returns {Number} squared length of a\r\n */\n\nexport function squaredLength(a) {\n  var x = a[0];\n  var y = a[1];\n  var z = a[2];\n  return x * x + y * y + z * z;\n}\n/**\r\n * Negates the components of a vec3\r\n *\r\n * @param {vec3} out the receiving vector\r\n * @param {ReadonlyVec3} a vector to negate\r\n * @returns {vec3} out\r\n */\n\nexport function negate(out, a) {\n  out[0] = -a[0];\n  out[1] = -a[1];\n  out[2] = -a[2];\n  return out;\n}\n/**\r\n * Returns the inverse of the components of a vec3\r\n *\r\n * @param {vec3} out the receiving vector\r\n * @param {ReadonlyVec3} a vector to invert\r\n * @returns {vec3} out\r\n */\n\nexport function inverse(out, a) {\n  out[0] = 1.0 / a[0];\n  out[1] = 1.0 / a[1];\n  out[2] = 1.0 / a[2];\n  return out;\n}\n/**\r\n * Normalize a vec3\r\n *\r\n * @param {vec3} out the receiving vector\r\n * @param {ReadonlyVec3} a vector to normalize\r\n * @returns {vec3} out\r\n */\n\nexport function normalize(out, a) {\n  var x = a[0];\n  var y = a[1];\n  var z = a[2];\n  var len = x * x + y * y + z * z;\n\n  if (len > 0) {\n    //TODO: evaluate use of glm_invsqrt here?\n    len = 1 / Math.sqrt(len);\n  }\n\n  out[0] = a[0] * len;\n  out[1] = a[1] * len;\n  out[2] = a[2] * len;\n  return out;\n}\n/**\r\n * Calculates the dot product of two vec3's\r\n *\r\n * @param {ReadonlyVec3} a the first operand\r\n * @param {ReadonlyVec3} b the second operand\r\n * @returns {Number} dot product of a and b\r\n */\n\nexport function dot(a, b) {\n  return a[0] * b[0] + a[1] * b[1] + a[2] * b[2];\n}\n/**\r\n * Computes the cross product of two vec3's\r\n *\r\n * @param {vec3} out the receiving vector\r\n * @param {ReadonlyVec3} a the first operand\r\n * @param {ReadonlyVec3} b the second operand\r\n * @returns {vec3} out\r\n */\n\nexport function cross(out, a, b) {\n  var ax = a[0],\n      ay = a[1],\n      az = a[2];\n  var bx = b[0],\n      by = b[1],\n      bz = b[2];\n  out[0] = ay * bz - az * by;\n  out[1] = az * bx - ax * bz;\n  out[2] = ax * by - ay * bx;\n  return out;\n}\n/**\r\n * Performs a linear interpolation between two vec3's\r\n *\r\n * @param {vec3} out the receiving vector\r\n * @param {ReadonlyVec3} a the first operand\r\n * @param {ReadonlyVec3} b the second operand\r\n * @param {Number} t interpolation amount, in the range [0-1], between the two inputs\r\n * @returns {vec3} out\r\n */\n\nexport function lerp(out, a, b, t) {\n  var ax = a[0];\n  var ay = a[1];\n  var az = a[2];\n  out[0] = ax + t * (b[0] - ax);\n  out[1] = ay + t * (b[1] - ay);\n  out[2] = az + t * (b[2] - az);\n  return out;\n}\n/**\r\n * Performs a hermite interpolation with two control points\r\n *\r\n * @param {vec3} out the receiving vector\r\n * @param {ReadonlyVec3} a the first operand\r\n * @param {ReadonlyVec3} b the second operand\r\n * @param {ReadonlyVec3} c the third operand\r\n * @param {ReadonlyVec3} d the fourth operand\r\n * @param {Number} t interpolation amount, in the range [0-1], between the two inputs\r\n * @returns {vec3} out\r\n */\n\nexport function hermite(out, a, b, c, d, t) {\n  var factorTimes2 = t * t;\n  var factor1 = factorTimes2 * (2 * t - 3) + 1;\n  var factor2 = factorTimes2 * (t - 2) + t;\n  var factor3 = factorTimes2 * (t - 1);\n  var factor4 = factorTimes2 * (3 - 2 * t);\n  out[0] = a[0] * factor1 + b[0] * factor2 + c[0] * factor3 + d[0] * factor4;\n  out[1] = a[1] * factor1 + b[1] * factor2 + c[1] * factor3 + d[1] * factor4;\n  out[2] = a[2] * factor1 + b[2] * factor2 + c[2] * factor3 + d[2] * factor4;\n  return out;\n}\n/**\r\n * Performs a bezier interpolation with two control points\r\n *\r\n * @param {vec3} out the receiving vector\r\n * @param {ReadonlyVec3} a the first operand\r\n * @param {ReadonlyVec3} b the second operand\r\n * @param {ReadonlyVec3} c the third operand\r\n * @param {ReadonlyVec3} d the fourth operand\r\n * @param {Number} t interpolation amount, in the range [0-1], between the two inputs\r\n * @returns {vec3} out\r\n */\n\nexport function bezier(out, a, b, c, d, t) {\n  var inverseFactor = 1 - t;\n  var inverseFactorTimesTwo = inverseFactor * inverseFactor;\n  var factorTimes2 = t * t;\n  var factor1 = inverseFactorTimesTwo * inverseFactor;\n  var factor2 = 3 * t * inverseFactorTimesTwo;\n  var factor3 = 3 * factorTimes2 * inverseFactor;\n  var factor4 = factorTimes2 * t;\n  out[0] = a[0] * factor1 + b[0] * factor2 + c[0] * factor3 + d[0] * factor4;\n  out[1] = a[1] * factor1 + b[1] * factor2 + c[1] * factor3 + d[1] * factor4;\n  out[2] = a[2] * factor1 + b[2] * factor2 + c[2] * factor3 + d[2] * factor4;\n  return out;\n}\n/**\r\n * Generates a random vector with the given scale\r\n *\r\n * @param {vec3} out the receiving vector\r\n * @param {Number} [scale] Length of the resulting vector. If ommitted, a unit vector will be returned\r\n * @returns {vec3} out\r\n */\n\nexport function random(out, scale) {\n  scale = scale || 1.0;\n  var r = glMatrix.RANDOM() * 2.0 * Math.PI;\n  var z = glMatrix.RANDOM() * 2.0 - 1.0;\n  var zScale = Math.sqrt(1.0 - z * z) * scale;\n  out[0] = Math.cos(r) * zScale;\n  out[1] = Math.sin(r) * zScale;\n  out[2] = z * scale;\n  return out;\n}\n/**\r\n * Transforms the vec3 with a mat4.\r\n * 4th vector component is implicitly '1'\r\n *\r\n * @param {vec3} out the receiving vector\r\n * @param {ReadonlyVec3} a the vector to transform\r\n * @param {ReadonlyMat4} m matrix to transform with\r\n * @returns {vec3} out\r\n */\n\nexport function transformMat4(out, a, m) {\n  var x = a[0],\n      y = a[1],\n      z = a[2];\n  var w = m[3] * x + m[7] * y + m[11] * z + m[15];\n  w = w || 1.0;\n  out[0] = (m[0] * x + m[4] * y + m[8] * z + m[12]) / w;\n  out[1] = (m[1] * x + m[5] * y + m[9] * z + m[13]) / w;\n  out[2] = (m[2] * x + m[6] * y + m[10] * z + m[14]) / w;\n  return out;\n}\n/**\r\n * Transforms the vec3 with a mat3.\r\n *\r\n * @param {vec3} out the receiving vector\r\n * @param {ReadonlyVec3} a the vector to transform\r\n * @param {ReadonlyMat3} m the 3x3 matrix to transform with\r\n * @returns {vec3} out\r\n */\n\nexport function transformMat3(out, a, m) {\n  var x = a[0],\n      y = a[1],\n      z = a[2];\n  out[0] = x * m[0] + y * m[3] + z * m[6];\n  out[1] = x * m[1] + y * m[4] + z * m[7];\n  out[2] = x * m[2] + y * m[5] + z * m[8];\n  return out;\n}\n/**\r\n * Transforms the vec3 with a quat\r\n * Can also be used for dual quaternions. (Multiply it with the real part)\r\n *\r\n * @param {vec3} out the receiving vector\r\n * @param {ReadonlyVec3} a the vector to transform\r\n * @param {ReadonlyQuat} q quaternion to transform with\r\n * @returns {vec3} out\r\n */\n\nexport function transformQuat(out, a, q) {\n  // benchmarks: https://jsperf.com/quaternion-transform-vec3-implementations-fixed\n  var qx = q[0],\n      qy = q[1],\n      qz = q[2],\n      qw = q[3];\n  var x = a[0],\n      y = a[1],\n      z = a[2]; // var qvec = [qx, qy, qz];\n  // var uv = vec3.cross([], qvec, a);\n\n  var uvx = qy * z - qz * y,\n      uvy = qz * x - qx * z,\n      uvz = qx * y - qy * x; // var uuv = vec3.cross([], qvec, uv);\n\n  var uuvx = qy * uvz - qz * uvy,\n      uuvy = qz * uvx - qx * uvz,\n      uuvz = qx * uvy - qy * uvx; // vec3.scale(uv, uv, 2 * w);\n\n  var w2 = qw * 2;\n  uvx *= w2;\n  uvy *= w2;\n  uvz *= w2; // vec3.scale(uuv, uuv, 2);\n\n  uuvx *= 2;\n  uuvy *= 2;\n  uuvz *= 2; // return vec3.add(out, a, vec3.add(out, uv, uuv));\n\n  out[0] = x + uvx + uuvx;\n  out[1] = y + uvy + uuvy;\n  out[2] = z + uvz + uuvz;\n  return out;\n}\n/**\r\n * Rotate a 3D vector around the x-axis\r\n * @param {vec3} out The receiving vec3\r\n * @param {ReadonlyVec3} a The vec3 point to rotate\r\n * @param {ReadonlyVec3} b The origin of the rotation\r\n * @param {Number} rad The angle of rotation in radians\r\n * @returns {vec3} out\r\n */\n\nexport function rotateX(out, a, b, rad) {\n  var p = [],\n      r = []; //Translate point to the origin\n\n  p[0] = a[0] - b[0];\n  p[1] = a[1] - b[1];\n  p[2] = a[2] - b[2]; //perform rotation\n\n  r[0] = p[0];\n  r[1] = p[1] * Math.cos(rad) - p[2] * Math.sin(rad);\n  r[2] = p[1] * Math.sin(rad) + p[2] * Math.cos(rad); //translate to correct position\n\n  out[0] = r[0] + b[0];\n  out[1] = r[1] + b[1];\n  out[2] = r[2] + b[2];\n  return out;\n}\n/**\r\n * Rotate a 3D vector around the y-axis\r\n * @param {vec3} out The receiving vec3\r\n * @param {ReadonlyVec3} a The vec3 point to rotate\r\n * @param {ReadonlyVec3} b The origin of the rotation\r\n * @param {Number} rad The angle of rotation in radians\r\n * @returns {vec3} out\r\n */\n\nexport function rotateY(out, a, b, rad) {\n  var p = [],\n      r = []; //Translate point to the origin\n\n  p[0] = a[0] - b[0];\n  p[1] = a[1] - b[1];\n  p[2] = a[2] - b[2]; //perform rotation\n\n  r[0] = p[2] * Math.sin(rad) + p[0] * Math.cos(rad);\n  r[1] = p[1];\n  r[2] = p[2] * Math.cos(rad) - p[0] * Math.sin(rad); //translate to correct position\n\n  out[0] = r[0] + b[0];\n  out[1] = r[1] + b[1];\n  out[2] = r[2] + b[2];\n  return out;\n}\n/**\r\n * Rotate a 3D vector around the z-axis\r\n * @param {vec3} out The receiving vec3\r\n * @param {ReadonlyVec3} a The vec3 point to rotate\r\n * @param {ReadonlyVec3} b The origin of the rotation\r\n * @param {Number} rad The angle of rotation in radians\r\n * @returns {vec3} out\r\n */\n\nexport function rotateZ(out, a, b, rad) {\n  var p = [],\n      r = []; //Translate point to the origin\n\n  p[0] = a[0] - b[0];\n  p[1] = a[1] - b[1];\n  p[2] = a[2] - b[2]; //perform rotation\n\n  r[0] = p[0] * Math.cos(rad) - p[1] * Math.sin(rad);\n  r[1] = p[0] * Math.sin(rad) + p[1] * Math.cos(rad);\n  r[2] = p[2]; //translate to correct position\n\n  out[0] = r[0] + b[0];\n  out[1] = r[1] + b[1];\n  out[2] = r[2] + b[2];\n  return out;\n}\n/**\r\n * Get the angle between two 3D vectors\r\n * @param {ReadonlyVec3} a The first operand\r\n * @param {ReadonlyVec3} b The second operand\r\n * @returns {Number} The angle in radians\r\n */\n\nexport function angle(a, b) {\n  var ax = a[0],\n      ay = a[1],\n      az = a[2],\n      bx = b[0],\n      by = b[1],\n      bz = b[2],\n      mag1 = Math.sqrt(ax * ax + ay * ay + az * az),\n      mag2 = Math.sqrt(bx * bx + by * by + bz * bz),\n      mag = mag1 * mag2,\n      cosine = mag && dot(a, b) / mag;\n  return Math.acos(Math.min(Math.max(cosine, -1), 1));\n}\n/**\r\n * Set the components of a vec3 to zero\r\n *\r\n * @param {vec3} out the receiving vector\r\n * @returns {vec3} out\r\n */\n\nexport function zero(out) {\n  out[0] = 0.0;\n  out[1] = 0.0;\n  out[2] = 0.0;\n  return out;\n}\n/**\r\n * Returns a string representation of a vector\r\n *\r\n * @param {ReadonlyVec3} a vector to represent as a string\r\n * @returns {String} string representation of the vector\r\n */\n\nexport function str(a) {\n  return \"vec3(\" + a[0] + \", \" + a[1] + \", \" + a[2] + \")\";\n}\n/**\r\n * Returns whether or not the vectors have exactly the same elements in the same position (when compared with ===)\r\n *\r\n * @param {ReadonlyVec3} a The first vector.\r\n * @param {ReadonlyVec3} b The second vector.\r\n * @returns {Boolean} True if the vectors are equal, false otherwise.\r\n */\n\nexport function exactEquals(a, b) {\n  return a[0] === b[0] && a[1] === b[1] && a[2] === b[2];\n}\n/**\r\n * Returns whether or not the vectors have approximately the same elements in the same position.\r\n *\r\n * @param {ReadonlyVec3} a The first vector.\r\n * @param {ReadonlyVec3} b The second vector.\r\n * @returns {Boolean} True if the vectors are equal, false otherwise.\r\n */\n\nexport function equals(a, b) {\n  var a0 = a[0],\n      a1 = a[1],\n      a2 = a[2];\n  var b0 = b[0],\n      b1 = b[1],\n      b2 = b[2];\n  return Math.abs(a0 - b0) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a0), Math.abs(b0)) && Math.abs(a1 - b1) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a1), Math.abs(b1)) && Math.abs(a2 - b2) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a2), Math.abs(b2));\n}\n/**\r\n * Alias for {@link vec3.subtract}\r\n * @function\r\n */\n\nexport var sub = subtract;\n/**\r\n * Alias for {@link vec3.multiply}\r\n * @function\r\n */\n\nexport var mul = multiply;\n/**\r\n * Alias for {@link vec3.divide}\r\n * @function\r\n */\n\nexport var div = divide;\n/**\r\n * Alias for {@link vec3.distance}\r\n * @function\r\n */\n\nexport var dist = distance;\n/**\r\n * Alias for {@link vec3.squaredDistance}\r\n * @function\r\n */\n\nexport var sqrDist = squaredDistance;\n/**\r\n * Alias for {@link vec3.length}\r\n * @function\r\n */\n\nexport var len = length;\n/**\r\n * Alias for {@link vec3.squaredLength}\r\n * @function\r\n */\n\nexport var sqrLen = squaredLength;\n/**\r\n * Perform some operation over an array of vec3s.\r\n *\r\n * @param {Array} a the array of vectors to iterate over\r\n * @param {Number} stride Number of elements between the start of each vec3. If 0 assumes tightly packed\r\n * @param {Number} offset Number of elements to skip at the beginning of the array\r\n * @param {Number} count Number of vec3s to iterate over. If 0 iterates over entire array\r\n * @param {Function} fn Function to call for each vector in the array\r\n * @param {Object} [arg] additional argument to pass to fn\r\n * @returns {Array} a\r\n * @function\r\n */\n\nexport var forEach = function () {\n  var vec = create();\n  return function (a, stride, offset, count, fn, arg) {\n    var i, l;\n\n    if (!stride) {\n      stride = 3;\n    }\n\n    if (!offset) {\n      offset = 0;\n    }\n\n    if (count) {\n      l = Math.min(count * stride + offset, a.length);\n    } else {\n      l = a.length;\n    }\n\n    for (i = offset; i < l; i += stride) {\n      vec[0] = a[i];\n      vec[1] = a[i + 1];\n      vec[2] = a[i + 2];\n      fn(vec, vec, arg);\n      a[i] = vec[0];\n      a[i + 1] = vec[1];\n      a[i + 2] = vec[2];\n    }\n\n    return a;\n  };\n}();","import { vec3, quat, mat4 } from 'gl-matrix';\r\n\r\nimport Camera from './Camera';\r\nimport { IRendererState } from './Renderer';\r\n\r\nfunction bitCount(num: number) {\r\n  let n = num;\r\n  n = ((0xaa & n) >> 1) + (0x55 & n);\r\n  n = ((0xcc & n) >> 2) + (0x33 & n);\r\n  n = ((0xf0 & n) >> 4) + (0x0f & n);\r\n  return n;\r\n}\r\n\r\nconst dec2bin = (dec: number) => (dec >>> 0).toString(2);\r\n\r\nexport abstract class EncodedOctree {\r\n  bboxStart: vec3 = vec3.create()\r\n  bboxEnd: vec3 = vec3.create();\r\n  bboxCenter: vec3 = vec3.create();\r\n  rootSide: number;\r\n  nLevels: number;\r\n  nNodes: number;\r\n}\r\n\r\nexport class SVDAG extends EncodedOctree {\r\n  nodes: Uint32Array;\r\n  // Since the `nodes` array might get padded, store the original amount of data in here\r\n  originalNodeLength: number;\r\n\r\n  initialized = false;\r\n  // byte offset (not 32 bit ints, but bytes)\r\n  dataLoadedOffset = 0;\r\n\r\n  renderPreferences: Partial<IRendererState & { spawnPosition: vec3; moveSpeed: number }> = {};\r\n\r\n  load(buffer: ArrayBuffer) {\r\n    // Header\r\n    const i = this.parseHeader(buffer);\r\n\r\n    // Nodes\r\n    this.nodes.set(new Uint32Array(buffer.slice(i)));\r\n  }\r\n\r\n  parseHeader(buffer: ArrayBuffer) {\r\n\r\n    let i = 0;\r\n    this.bboxStart.set(new Float32Array(buffer.slice(i, i + 12))); // first 12 bytes is bbox start\r\n    i += 12;\r\n    this.bboxEnd.set(new Float32Array(buffer.slice(i, i + 12))); // second 12 bytes is bbox end\r\n    i += 12;\r\n    this.rootSide = new Float32Array(buffer.slice(i, i + 4))[0];\r\n    i += 4;\r\n    this.nLevels = new Uint32Array(buffer.slice(i, i + 4))[0];\r\n    i += 4;\r\n    this.nNodes = new Uint32Array(buffer.slice(i, i + 4))[0];\r\n    i += 4;\r\n    const firstLeafPointer = new Uint32Array(buffer.slice(i, i + 4))[0];\r\n    i += 4;\r\n    const nodeBufLength = new Uint32Array(buffer.slice(i, i + 4))[0];\r\n    this.originalNodeLength = nodeBufLength;\r\n    i += 4;\r\n\r\n    this.nodes = new Uint32Array(nodeBufLength);\r\n\r\n    // Utils\r\n    vec3.sub(this.bboxCenter, this.bboxEnd, this.bboxStart);\r\n    vec3.scaleAndAdd(this.bboxCenter, this.bboxStart, this.bboxCenter, 0.5);\r\n\r\n    return i;\r\n  }\r\n\r\n  loadChunk(buffer: Uint8Array) {\r\n    if (!this.initialized) {\r\n      const lastOffset = this.parseHeader(buffer.buffer);\r\n      this.initialized = true;\r\n\r\n      if ((buffer.length - lastOffset) / 4 !== this.nodes.length) {\r\n        // If the first chunk is not the whole scene, set all bytes to full (max 32 bit signed int: TODO: unsigned)\r\n        // In the renderer, this indicates that these should be counted as intersections immediately\r\n        this.nodes.fill(Math.pow(2, 31) - 1);\r\n      }\r\n\r\n      // The rest of this chunk is node data, can be loaded as another chunk\r\n      this.loadChunk(buffer.slice(lastOffset));\r\n    } else {\r\n      // console.log(`Loading chunk containing ${buffer.length} bytes...`);\r\n      this.nodes.set(new Uint32Array(buffer.buffer), this.dataLoadedOffset / 4);\r\n      this.dataLoadedOffset += buffer.length;\r\n    }\r\n  }\r\n\r\n  castRay(o: vec3, d: vec3, maxIters = 100): { nodeIndex: number; hitPos: vec3; maxRayLength: number } | null {\r\n    // const stack: number[] = []; // TODO: Reuse list of traversed node indices per level \r\n    \r\n    // TODO: Find intersection of ray with next node instead of naively stepping with a small step size\r\n    const stepSize = this.rootSide / Math.pow(2, this.nLevels - 1);\r\n\r\n    const p = vec3.copy(vec3.create(), o);\r\n    for (let i = 0; i < maxIters; i++) {\r\n      vec3.scaleAndAdd(p, p, d, stepSize);\r\n      const node = this.getVoxel(p);\r\n      if (node) {\r\n        return { ...node, maxRayLength: stepSize * maxIters };\r\n      }\r\n    }\r\n    return null;\r\n  }\r\n\r\n  getVoxel(pos: vec3): { nodeIndex: number; hitPos: vec3 } | null {\r\n    // Transform world position to the [0, 1] range\r\n    // const gridPos = vec3.scale(vec3.create(), pos, 1 / (2 * this.rootSide));\r\n    const nodeCenter = vec3.create();\r\n    nodeCenter.set(this.bboxCenter);\r\n\r\n    let nodeIndex = 0;\r\n\r\n    let hs = this.rootSide / 2;\r\n\r\n    for (let lev = 0; lev < this.nLevels; lev++) {\r\n      // console.log(lev, vec3.scale(vec3.create(), nodeCenter, 1 / this.rootSide));\r\n      const childIndex = (pos[0] > nodeCenter[0] ? 4 : 0)\r\n                       + (pos[1] > nodeCenter[1] ? 2 : 0)\r\n                       + (pos[2] > nodeCenter[2] ? 1 : 0);\r\n\r\n      const header = this.nodes[nodeIndex];\r\n\r\n      const hasChild = (header & (1 << childIndex)) !== 0;\r\n      if (!hasChild) {\r\n        return null;\r\n      } else if (lev === this.nLevels - 1) {\r\n        return { nodeIndex, hitPos: nodeCenter };\r\n      }\r\n\r\n      hs /= 2;\r\n\r\n      nodeCenter[0] += (pos[0] > nodeCenter[0]) ? hs : -hs;\r\n      nodeCenter[1] += (pos[1] > nodeCenter[1]) ? hs : -hs;\r\n      nodeCenter[2] += (pos[2] > nodeCenter[2]) ? hs : -hs;\r\n      \r\n      const childPtrOffset = bitCount(header >> childIndex);\r\n      nodeIndex = this.nodes[nodeIndex + childPtrOffset];\r\n    }\r\n    return null;\r\n  }\r\n}\r\n\r\nexport class ESVDAG extends EncodedOctree {\r\n  innerNodes: Uint16Array;\r\n  leafNodes: BigUint64Array;\r\n  levelOffsets: Uint32Array;\r\n\r\n  load(buffer: ArrayBuffer) {\r\n    console.log(`Loading SVDAG (${buffer.byteLength} bytes)`);\r\n\r\n    // Header\r\n    let i = 0;\r\n    this.bboxStart.set(new Float32Array(buffer.slice(i, i + 12))); // first 12 bytes is bbox start\r\n    i += 12;\r\n    this.bboxEnd.set(new Float32Array(buffer.slice(i, i + 12))); // second 12 bytes is bbox end\r\n    i += 12;\r\n    const rootSide = new Float32Array(buffer.slice(i, i + 4))[0];\r\n    i += 4;\r\n    this.nLevels = new Uint32Array(buffer.slice(i, i + 4))[0];\r\n    i += 4;\r\n    const nNodes = new Uint32Array(buffer.slice(i, i + 4))[0];\r\n    i += 4;\r\n  \r\n    // Inner nodes\r\n    const nInnerNodes = new Uint32Array(buffer.slice(i, i + 4))[0];\r\n    i += 4;\r\n    this.innerNodes = new Uint16Array(buffer.slice(i, i + 2 * nInnerNodes)); // 16 bytes = 2 * 8 bits\r\n    i += 2 * nInnerNodes;\r\n\r\n    // Leaf nodes\r\n    const nLeafNodes = new Uint32Array(buffer.slice(i, i + 4))[0];\r\n    i += 4;\r\n    this.leafNodes = new BigUint64Array(buffer.slice(i, i + 8 * nLeafNodes));\r\n    i += 8 * nLeafNodes;\r\n\r\n    // Level offsets\r\n    const nLevelOffsets = new Uint32Array(buffer.slice(i, i + 4))[0];\r\n    i += 4;\r\n    this.levelOffsets = new Uint32Array(buffer.slice(i, i + nLevelOffsets * 4));\r\n    i += nLevelOffsets * 4;\r\n\r\n    console.log('OK!');\r\n  }\r\n\r\n}\r\n\r\n\r\n","import { vec3, quat, mat4 } from 'gl-matrix';\r\n\r\nclass Camera {\r\n  position: vec3 = vec3.create();\r\n  target: vec3 = vec3.create();\r\n  upDir: vec3 = vec3.create();\r\n\r\n  fovY: number;\r\n\r\n  viewMat: mat4 = mat4.create();\r\n  viewMatInv: mat4 = mat4.create();\r\n  projMat: mat4 = mat4.create();\r\n  projMatInv: mat4 = mat4.create();\r\n\r\n  constructor() {\r\n    this.fovY = 60.0 * 3.14159265359 / 180.0;\r\n    vec3.set(this.upDir, 0, 1, 0); // y-up by default\r\n  }\r\n\r\n  updateMatrices() {\r\n    mat4.lookAt(this.viewMat, this.position, this.target, this.upDir);\r\n    mat4.perspective(this.projMat, this.fovY, window.innerWidth / window.innerHeight, 0.1, 1);\r\n    mat4.invert(this.projMatInv, this.projMat);\r\n    mat4.invert(this.viewMatInv, this.viewMat);\r\n    // TODO: Recompute upDir\r\n  }\r\n\r\n\r\n\r\n  // Updates the camera position from the view matrix\r\n  updatePosition() {\r\n    const forward = vec3.subtract(vec3.create(), this.position, this.target);\r\n    // const radius = vec3.len(forward);\r\n    // vec3.normalize(forward, forward);\r\n    console.log(forward);\r\n    vec3.transformMat4(this.position, forward, this.viewMat);\r\n    vec3.add(this.position, this.position, this.target);\r\n  }\r\n}\r\n\r\nexport default Camera;\r\n","\r\nexport function loadVertShader(gl: WebGL2RenderingContext) {\r\n  // // https://www.saschawillems.de/blog/2016/08/13/vulkan-tutorial-on-rendering-a-fullscreen-quad-without-buffers/\r\n  const vertSrc = `#version 300 es\r\n    uniform float time;\r\n    void main(void) {\r\n      vec2 outUV = vec2((gl_VertexID << 1) & 2, gl_VertexID & 2);\r\n      outUV = outUV * 2.0f - 1.0f;\r\n      // gl_Position = vec4(outUV * (1.0 / time) + vec2(cos(time * time), sin(time * time)), 0.0f, 1.0f);\r\n      gl_Position = vec4(outUV, 0.0f, 1.0f);\r\n    }\r\n  `;\r\n  const vertShader = gl.createShader(gl.VERTEX_SHADER);\r\n  gl.shaderSource(vertShader, vertSrc);\r\n  gl.compileShader(vertShader);\r\n  console.log('Vert shader: ', gl.getShaderInfoLog(vertShader) || 'OK');\r\n  return vertShader;\r\n}\r\n\r\nexport async function loadRaycastFragShader(gl: WebGL2RenderingContext, nLevels: number, mode: 'viewer' | 'depth' | 'pathtracing') {\r\n  const maxT3DTexels = gl.getParameter(gl.MAX_3D_TEXTURE_SIZE);\r\n  const maxT3DTexelsPow2 = maxT3DTexels * maxT3DTexels;\r\n\r\n  const shaderSrcRes = await fetch('raycast.glsl');\r\n  // const shaderSrcRes = await fetch('raycast2.glsl');\r\n  let shaderSrc = await shaderSrcRes.text();\r\n\r\n  const defines = `#version 300 es\r\n#define INNER_LEVELS ${nLevels *2 - 1}u\r\n#define TEX3D_SIZE ${maxT3DTexels}\r\n#define TEX3D_SIZE_POW2 ${maxT3DTexelsPow2}\r\n#define VIEWER_MODE ${mode === 'viewer' ? 1 : 0}\r\n#define DEPTH_MODE ${mode === 'depth' ? 1 : 0}\r\n#define PATH_TRACE_MODE ${mode === 'pathtracing' ? 1 : 0}\r\n`;\r\n\r\n  // Replace the first few lines from shaderSrc with defines\r\n  shaderSrc = defines + '\\n' + shaderSrc.split('\\n').splice(defines.split('\\n').length).join('\\n');\r\n\r\n  const shader = gl.createShader(gl.FRAGMENT_SHADER);\r\n  gl.shaderSource(shader, shaderSrc);\r\n  gl.compileShader(shader);\r\n  console.log(`Raycast shader (${mode}): `, gl.getShaderInfoLog(shader) || 'OK');\r\n  return shader;\r\n}\r\n\r\nexport async function loadNormalFragShader(gl: WebGL2RenderingContext) {\r\n  const shaderSrcRes = await fetch('normalFromDepth.glsl');\r\n  const shaderSrc = await shaderSrcRes.text();\r\n  const shader = gl.createShader(gl.FRAGMENT_SHADER);\r\n  gl.shaderSource(shader, shaderSrc);\r\n  gl.compileShader(shader);\r\n  console.log(`Normal shader: `, gl.getShaderInfoLog(shader) || 'OK');\r\n  return shader;\r\n}\r\n\r\nexport async function loadProgram(gl: WebGL2RenderingContext, vertShader: WebGLShader, fragShader: WebGLShader) {\r\n\r\n  // Proper error is printed when we don't check for errors\r\n  // (Disabled since the error is less obvious than the built-in error message for some reason)\r\n  // if (!gl.getShaderParameter(fragShader, gl.COMPILE_STATUS)\r\n  //   || !gl.getShaderParameter(vertShader, gl.COMPILE_STATUS)) {\r\n  //   throw new Error('Shader compilation failure');\r\n  // }\r\n\r\n  const program = gl.createProgram();\r\n  gl.attachShader(program, vertShader);\r\n  gl.attachShader(program, fragShader);\r\n  gl.linkProgram(program);\r\n\r\n  // gl.validateProgram(program);\r\n  // More descriptive error is given without validateProgram o.o\r\n\r\n  if (!gl.getProgramParameter(program, gl.LINK_STATUS)) {\r\n    throw 'Could not compile WebGL program. \\n\\n' + gl.getProgramInfoLog(program);\r\n  }\r\n\r\n  gl.useProgram(program);\r\n\r\n  return program;\r\n}\r\n","import Camera from './Camera';\r\nimport { SVDAG } from './SVDAG'\r\nimport { loadProgram, loadVertShader, loadRaycastFragShader, loadNormalFragShader } from './ShaderUtils';\r\nimport { mat4 } from 'gl-matrix';\r\n\r\n// Coupled to the glsl shader\r\nconst UNIFORMS = [\r\n  'time', 'resolution',\r\n  'viewMatInv', 'projMatInv',\r\n  'sceneBBoxMin', 'sceneBBoxMax', 'sceneCenter', 'rootHalfSide',\r\n  'maxIters', 'drawLevel', 'projectionFactor',\r\n  'nodes',\r\n  'viewerRenderMode',\r\n  'selectedVoxelIndex', 'uniqueColors',\r\n  'lightPos', 'enableShadows', 'normalEpsilon',\r\n  'minDepthTex', 'useBeamOptimization',\r\n  'depthTex', 'hitNormTex',\r\n  'ptFrame', 'screenTex'\r\n] as const;\r\ntype Uniform = typeof UNIFORMS[number];\r\n\r\nconst NORMAL_UNIFORMS = ['depthTex', 'viewProjMatInv'] as const;\r\ntype NormalUniform = typeof NORMAL_UNIFORMS[number];\r\n\r\n// Dict of uniform name to its ID\r\ntype UniformDict<U extends string> = {\r\n  [T in U]: WebGLUniformLocation;\r\n}\r\n\r\ntype ViewUniformDict = UniformDict<Uniform>;\r\ntype NormalUniformDict = UniformDict<NormalUniform>;\r\n\r\nexport enum RenderMode {\r\n  ITERATIONS = 0,\r\n  DEPTH = 1,\r\n  DIFFUSE_LIGHTING = 2,\r\n  PATH_TRACING = 3,\r\n  NORMAL = 4,\r\n}\r\n\r\n/**\r\n * Path tracing todo:\r\n * - Separate shader define for path tracing\r\n * - Set up full depth framebuffer with normals (maybe screen space normals in second pass?)\r\n * - Generate random sample\r\n * - Reset screen frame buffer when camera transformation changes\r\n * \r\n * Pseudocode:\r\n * renderPathTrace() {\r\n *  if (cameraOrientationChanged) {\r\n * \r\n *    renderMinDepthTex();\r\n *    \r\n *    bindOffscreenFrameBuffer   \r\n * \r\n *    clearDefaultFB();\r\n * \r\n *    renderPrimary(); // full depth tex\r\n * \r\n *    // render normals to texture based on screen space depth - basically dX and dY gradient (needs clipped tex coords)\r\n *    // Improvement: https://wickedengine.net/2019/09/22/improved-normal-reconstruction-from-depth/\r\n *    screenSpaceNormals(); \r\n * \r\n *  } else {\r\n *    renderPathTrace();\r\n *  }\r\n * }\r\n */\r\n\r\nexport interface IRendererState {\r\n  renderMode: RenderMode;\r\n  startTime: number;\r\n  time: number;\r\n  frame: number;\r\n  pathTraceFrame: number;\r\n  pixelTolerance: number;\r\n  renderScale: number;\r\n  drawLevel: number;\r\n  maxIterations: number;\r\n  useBeamOptimization: boolean;\r\n  showUniqueNodeColors: boolean;\r\n}\r\n\r\nexport default class Renderer {\r\n  gl: WebGL2RenderingContext;\r\n\r\n  svdag: SVDAG;\r\n\r\n  viewerProgram: WebGLProgram;\r\n  viewerUniformDict: ViewUniformDict;\r\n\r\n  pathTraceProgram: WebGLProgram;\r\n  pathTraceUniformDict: ViewUniformDict;\r\n\r\n  depthProgram: WebGLProgram;\r\n  depthUniformDict: ViewUniformDict;\r\n\r\n  normalProgram: WebGLProgram;\r\n  normalUniformDict: NormalUniformDict;\r\n\r\n  /** The 3D texture containing scene data */\r\n  texture: WebGLTexture;\r\n\r\n  maxT3DTexels: number;\r\n\r\n  minDepthFBO: WebGLFramebuffer;\r\n  minDepthTex: WebGLTexture;\r\n\r\n  fullDepthFBO: WebGLFramebuffer;\r\n  fullDepthTex: WebGLTexture;\r\n\r\n  normalFBO: WebGLFramebuffer;\r\n  normalTex: WebGLTexture;\r\n\r\n  state: IRendererState = {\r\n    startTime: new Date().getTime() / 1000,\r\n    time: 0,\r\n    frame: 0,\r\n    pathTraceFrame: 0,\r\n    pixelTolerance: 1,\r\n    renderScale: 1,\r\n    drawLevel: 1,\r\n    maxIterations: 250,\r\n    renderMode: RenderMode.NORMAL,\r\n    useBeamOptimization: true,\r\n    showUniqueNodeColors: false,\r\n  };\r\n\r\n  constructor(\r\n    public camera: Camera,\r\n    public canvas: HTMLCanvasElement,\r\n  ) {\r\n    this.gl = canvas.getContext(\"webgl2\") as WebGL2RenderingContext;\r\n    this.maxT3DTexels = this.gl.getParameter(this.gl.MAX_3D_TEXTURE_SIZE);\r\n  }\r\n\r\n  /**\r\n   * Set up FBOs and textures (depth, normal, etc.)\r\n   */\r\n  initialize() {\r\n    const { gl, canvas } = this;\r\n\r\n    const BEAM_SIZE = 8;\r\n    const minDepthW = Math.ceil(canvas.width / BEAM_SIZE), minDepthH = Math.ceil(canvas.height / BEAM_SIZE);\r\n\r\n    [this.minDepthFBO, this.minDepthTex] = this.setupTexFBO(gl.TEXTURE1, { width: minDepthW, height: minDepthH });\r\n    [this.fullDepthFBO, this.fullDepthTex] = this.setupTexFBO(gl.TEXTURE2);\r\n    [this.normalFBO, this.normalTex] = this.setupTexFBO(gl.TEXTURE3, { internalFormat: gl.RGB8, format: gl.RGB, type: gl.UNSIGNED_BYTE });\r\n  }\r\n\r\n  public render() {\r\n    const { gl, canvas, state, viewerUniformDict, depthUniformDict, normalUniformDict } = this;\r\n\r\n    // Pre-render low res depth pass\r\n    if (this.state.useBeamOptimization) {\r\n      // Min-depth pass\r\n      gl.useProgram(this.depthProgram);\r\n      gl.bindFramebuffer(gl.FRAMEBUFFER, this.minDepthFBO);\r\n      gl.activeTexture(gl.TEXTURE1);\r\n      gl.bindTexture(gl.TEXTURE_2D, null);\r\n      \r\n      const width = Math.ceil(canvas.width / 8); // beams of 8x8 pixels\r\n      const height = Math.ceil(canvas.height / 8);\r\n      \r\n      this.setInitialUniforms(depthUniformDict);\r\n      // Some custom uniforms for rendering min depth texture\r\n      gl.uniform2f(depthUniformDict.resolution, width, height);\r\n      gl.uniform1i(depthUniformDict.useBeamOptimization, 0);\r\n      gl.uniform1f(depthUniformDict.projectionFactor, this.getProjectionFactor(1, 8));\r\n      \r\n      // Render to min depth tex\r\n      gl.viewport(0, 0, width, height);\r\n      gl.clearColor(0, 0, 0, 0);\r\n      gl.clear(gl.COLOR_BUFFER_BIT);\r\n      gl.drawArrays(gl.TRIANGLES, 0, 3);\r\n\r\n      // Enable min depth tex for use\r\n      gl.activeTexture(gl.TEXTURE1);\r\n      gl.bindTexture(gl.TEXTURE_2D, this.minDepthTex);\r\n    }\r\n\r\n    // For normal rendering, render a full-depth texture\r\n    if (state.renderMode === RenderMode.NORMAL) {\r\n      // Full-depth pass\r\n      gl.useProgram(this.depthProgram);\r\n      gl.bindFramebuffer(gl.FRAMEBUFFER, this.fullDepthFBO);\r\n      gl.activeTexture(gl.TEXTURE2);\r\n      gl.bindTexture(gl.TEXTURE_2D, null);\r\n\r\n      this.setInitialUniforms(depthUniformDict);\r\n\r\n      gl.viewport(0, 0, canvas.width, canvas.height);\r\n      gl.clearColor(0, 0, 0, 0);\r\n      gl.clear(gl.COLOR_BUFFER_BIT);\r\n      gl.drawArrays(gl.TRIANGLES, 0, 3);\r\n\r\n      gl.activeTexture(gl.TEXTURE2);\r\n      gl.bindTexture(gl.TEXTURE_2D, this.fullDepthTex);\r\n\r\n      ////////////\r\n\r\n      // Normal pass\r\n      gl.useProgram(this.normalProgram);\r\n      gl.bindFramebuffer(gl.FRAMEBUFFER, this.normalFBO);\r\n\r\n      // Enable full-depth tex and disable norm tex\r\n      gl.activeTexture(gl.TEXTURE3);\r\n      gl.bindTexture(gl.TEXTURE_2D, null);\r\n\r\n      this.setNormalUniforms(normalUniformDict);\r\n\r\n      gl.clearColor(0, 0, 0, 0);\r\n      gl.clear(gl.COLOR_BUFFER_BIT);\r\n      gl.drawArrays(gl.TRIANGLES, 0, 3);\r\n\r\n      gl.activeTexture(gl.TEXTURE3);\r\n      gl.bindTexture(gl.TEXTURE_2D, this.normalTex);\r\n    }\r\n\r\n    if (state.renderMode === RenderMode.PATH_TRACING) {\r\n      if (state.pathTraceFrame === 0) {\r\n        // Initial render for path tracing: Render hitPosTex and hitNormTex for primary visibility rays\r\n\r\n      } else {\r\n        // Subsequent frames render light bounces\r\n\r\n        // TODO: Since you cannot read and write to the same texture,\r\n        // two textures are needed and we need to swap between them every frame\r\n        // and then render the latest one to the screen with ANOTHER full-screen quad shader\r\n\r\n\r\n        // TEMPORARY\r\n        // Reset frame buffer so we can render to the screen\r\n        gl.bindFramebuffer(gl.FRAMEBUFFER, null);\r\n        \r\n        // Use the viewer program for rendering to the screen\r\n        gl.useProgram(this.pathTraceProgram);\r\n        \r\n        // TODO: Only update uniforms when they change, not all of them every time\r\n        this.setInitialUniforms(this.pathTraceUniformDict);\r\n\r\n        // Render \r\n        gl.viewport(0, 0, canvas.width, canvas.height);\r\n        gl.clearColor(0, 0, 0, 1);\r\n        gl.clear(gl.COLOR_BUFFER_BIT);\r\n        gl.drawArrays(gl.TRIANGLES, 0, 3);\r\n      }\r\n\r\n      state.pathTraceFrame++;\r\n      return; \r\n    }\r\n\r\n    // Reset frame buffer so we can render to the screen\r\n    gl.bindFramebuffer(gl.FRAMEBUFFER, null);\r\n    \r\n    // Use the viewer program for rendering to the screen\r\n    gl.useProgram(this.viewerProgram);\r\n    \r\n    // TODO: Only update uniforms when they change, not all of them every time\r\n    this.setInitialUniforms(viewerUniformDict);\r\n\r\n    // Render \r\n    gl.viewport(0, 0, canvas.width, canvas.height);\r\n    gl.clearColor(0, 0, 0, 1);\r\n    gl.clear(gl.COLOR_BUFFER_BIT);\r\n    gl.drawArrays(gl.TRIANGLES, 0, 3);\r\n\r\n    state.frame++;\r\n  }\r\n\r\n  initScene(svdag: SVDAG) {\r\n    this.svdag = svdag;\r\n  }\r\n\r\n  async initShaders() {\r\n    const { gl, svdag } = this;\r\n    const vertShader = loadVertShader(gl); // single triangle filling up the screen\r\n    const viewerFragShader = await loadRaycastFragShader(gl, svdag.nLevels, 'viewer');\r\n    const depthFragShader = await loadRaycastFragShader(gl, svdag.nLevels, 'depth');\r\n    const normalFragShader = await loadNormalFragShader(gl);\r\n    const pathTraceFragShader = await loadRaycastFragShader(gl, svdag.nLevels, 'pathtracing');\r\n\r\n    this.viewerProgram = await loadProgram(gl, vertShader, viewerFragShader);\r\n    this.depthProgram = await loadProgram(gl, vertShader, depthFragShader);\r\n    this.normalProgram = await loadProgram(gl, vertShader, normalFragShader);\r\n    this.pathTraceProgram = await loadProgram(gl, vertShader, pathTraceFragShader);\r\n    \r\n    gl.useProgram(this.viewerProgram);\r\n\r\n  }\r\n\r\n  /**\r\n   * \r\n   * @param texNum Which texture slot to use (gl.TEXTURE0/1/2/3...)\r\n   * @param opts Texture config, default variables are for screen space texture\r\n   */\r\n  setupTexFBO(\r\n    texNum = this.gl.TEXTURE0,\r\n    {\r\n      internalFormat = this.gl.RGBA32F,\r\n      format = this.gl.RGBA,\r\n      type = this.gl.FLOAT,\r\n      width = this.canvas.width,\r\n      height = this.canvas.height,\r\n      magFilter = this.gl.NEAREST,\r\n      minFilter = this.gl.NEAREST,\r\n      wrapS = this.gl.CLAMP_TO_EDGE,\r\n      wrapT = this.gl.CLAMP_TO_EDGE,\r\n    } = {}) {\r\n    const { gl } = this;\r\n\r\n    const fbo = gl.createFramebuffer();\r\n    const tex = gl.createTexture();\r\n\r\n    gl.bindFramebuffer(gl.FRAMEBUFFER, fbo);\r\n    \r\n    gl.activeTexture(texNum);\r\n    gl.bindTexture(gl.TEXTURE_2D, tex);\r\n\r\n    gl.texImage2D(gl.TEXTURE_2D, 0, internalFormat, width, height, 0, format, type, null);\r\n\r\n    gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MAG_FILTER, magFilter);\r\n    gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MIN_FILTER, minFilter);\r\n    gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_S, wrapS);\r\n    gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_T, wrapT);\r\n    gl.framebufferTexture2D(gl.FRAMEBUFFER, gl.COLOR_ATTACHMENT0, gl.TEXTURE_2D, tex, 0);\r\n    gl.drawBuffers([gl.COLOR_ATTACHMENT0]);\r\n\r\n    const fboStatus = gl.checkFramebufferStatus(gl.FRAMEBUFFER);\r\n    if (fboStatus !== gl.FRAMEBUFFER_COMPLETE) console.error('FBO error', fboStatus);\r\n\r\n    return [fbo, tex];\r\n  }\r\n\r\n  //////////////////////////////////////////////////////////////\r\n  ////////////////////////// UNIFORMS //////////////////////////\r\n  //////////////////////////////////////////////////////////////\r\n  initUniforms() {\r\n    const { gl } = this;\r\n    this.viewerUniformDict = {} as any;\r\n    this.depthUniformDict = {} as any;\r\n    this.normalUniformDict = {} as any;\r\n    this.pathTraceUniformDict = {} as any;\r\n    UNIFORMS.forEach(u => this.viewerUniformDict[u] = gl.getUniformLocation(this.viewerProgram, u));\r\n    UNIFORMS.forEach(u => this.depthUniformDict[u] = gl.getUniformLocation(this.depthProgram, u));\r\n    NORMAL_UNIFORMS.forEach(u => this.normalUniformDict[u] = gl.getUniformLocation(this.normalProgram, u));\r\n    UNIFORMS.forEach(u => this.pathTraceUniformDict[u] = gl.getUniformLocation(this.pathTraceProgram, u));\r\n  }\r\n\r\n  getProjectionFactor(pixelTolerance: number, screenDivisor: number) {\r\n    const { canvas, camera } = this;\r\n    const inv_2tan_half_fovy = 1.0 / (2.0 * Math.tan(0.5 * camera.fovY));\r\n    const screen_tolerance = pixelTolerance / (canvas.height / screenDivisor);\r\n    return inv_2tan_half_fovy / screen_tolerance;\r\n  }\r\n\r\n  setInitialUniforms(ud: ViewUniformDict) {\r\n    const { canvas, gl, camera, svdag, state } = this;\r\n\r\n    gl.uniform2f(ud.resolution, canvas.width, canvas.height);\r\n\r\n    gl.uniform1i(ud.nodes, 0);\r\n\r\n    gl.uniform3fv(ud.sceneBBoxMin, svdag.bboxStart);\r\n    gl.uniform3fv(ud.sceneBBoxMax, svdag.bboxEnd);\r\n    gl.uniform3fv(ud.sceneCenter, svdag.bboxCenter);\r\n    gl.uniform1f(ud.rootHalfSide, svdag.rootSide / 2.0);\r\n\r\n    // TODO: Make light pos configurable, currently always bboxEnd\r\n    gl.uniform3fv(ud.lightPos, svdag.bboxEnd);\r\n\r\n    gl.uniform1ui(ud.maxIters, state.maxIterations);\r\n    gl.uniform1ui(ud.drawLevel, state.drawLevel);\r\n    gl.uniform1f(ud.projectionFactor, this.getProjectionFactor(state.pixelTolerance, 1));\r\n\r\n    gl.uniform1i(ud.uniqueColors, state.showUniqueNodeColors ? 1 : 0);\r\n\r\n    gl.uniform1i(ud.viewerRenderMode, state.renderMode);\r\n\r\n    gl.uniformMatrix4fv(ud.viewMatInv, false, camera.viewMatInv);\r\n    gl.uniformMatrix4fv(ud.projMatInv, false, camera.projMatInv);\r\n\r\n    // Todo: make this a vec4 like shadertoy\r\n    gl.uniform1f(ud.time, new Date().getTime() / 1000 - state.startTime);\r\n    gl.uniform1ui(ud.ptFrame, state.pathTraceFrame);\r\n\r\n    gl.uniform1i(ud.useBeamOptimization, state.useBeamOptimization ? 1 : 0);\r\n    gl.uniform1i(ud.minDepthTex, 1);\r\n    gl.uniform1i(ud.depthTex, 2);\r\n    gl.uniform1i(ud.hitNormTex, 3);\r\n    gl.uniform1i(ud.screenTex, 4);\r\n  }\r\n\r\n  setNormalUniforms(ud: NormalUniformDict) {\r\n    const { gl, camera } = this;\r\n    \r\n    gl.uniformMatrix4fv(ud.viewProjMatInv, false, mat4.invert(mat4.create(), mat4.mul(mat4.create(), camera.projMat, camera.viewMat)));\r\n    gl.uniform1i(ud.depthTex, 2);\r\n  }\r\n\r\n  // setFrameUniforms() {\r\n\r\n  // }\r\n\r\n\r\n  //////////////////////////////////////////////////////////////\r\n  ////////////////////// 3D TEXTURE DATA ///////////////////////\r\n  //////////////////////////////////////////////////////////////\r\n  createNodesTexture() {\r\n    const { gl } = this;\r\n    this.texture = gl.createTexture();\r\n    gl.activeTexture(gl.TEXTURE0);\r\n    gl.bindTexture(gl.TEXTURE_3D, this.texture);\r\n    \r\n    gl.texParameteri(gl.TEXTURE_3D, gl.TEXTURE_MIN_FILTER, gl.NEAREST);\r\n    gl.texParameteri(gl.TEXTURE_3D, gl.TEXTURE_MAG_FILTER, gl.NEAREST);\r\n    gl.texParameteri(gl.TEXTURE_3D, gl.TEXTURE_WRAP_S, gl.REPEAT);\r\n    gl.texParameteri(gl.TEXTURE_3D, gl.TEXTURE_WRAP_T, gl.REPEAT);\r\n    gl.texParameteri(gl.TEXTURE_3D, gl.TEXTURE_WRAP_R, gl.REPEAT);\r\n  }\r\n\r\n  deleteNodesTexture() {\r\n    if (this.texture !== undefined) {\r\n      this.gl.deleteTexture(this.texture);\r\n    }\r\n  }\r\n\r\n  /**\r\n * Updates the 3D texture with only the nodes that have been loaded since the last texture update\r\n */\r\n  uploadTexData(nNewNodes: number) {\r\n    const { gl, svdag, maxT3DTexels } = this;\r\n    const maxT3DTexelsPow2 = maxT3DTexels * maxT3DTexels;\r\n    const neededTexels = svdag.nodes.length;\r\n    const depthLayers = Math.ceil(neededTexels / maxT3DTexelsPow2);\r\n    const nTexelsToAllocate = maxT3DTexelsPow2 * depthLayers;\r\n\r\n    const chunkStart = svdag.dataLoadedOffset / 4 - nNewNodes;\r\n    console.log(chunkStart, svdag.dataLoadedOffset / 4, nNewNodes);\r\n\r\n    gl.activeTexture(gl.TEXTURE0);\r\n\r\n    if (chunkStart === 0) {\r\n      // For the first chunk, define the texture type and upload what data we have \r\n      console.log(`Initial uploading of nodes to 3D texture (Resolution: ${maxT3DTexels} x ${maxT3DTexels} x ${depthLayers}, nNodes: ${svdag.dataLoadedOffset}/${svdag.nodes.length})...`);\r\n\r\n      // Pad the data to fit the 3D texture dimensions (not required but makes it a bit easier)\r\n      if (svdag.nodes.length != nTexelsToAllocate) {\r\n        console.log('Resizing node buffer from ', svdag.nodes.length, 'to', nTexelsToAllocate, '(3D Texture padding)');\r\n        const paddedNodes = new Uint32Array(nTexelsToAllocate);\r\n        paddedNodes.set(svdag.nodes);\r\n        svdag.nodes = paddedNodes;\r\n      }\r\n\r\n      // Every \"pixel\" in the 3D texture will be used as a 32 bit int, so we set the type to a single 32 bit red pixel (R32UI)\r\n      gl.texStorage3D(gl.TEXTURE_3D, 1, gl.R32UI, maxT3DTexels, maxT3DTexels, depthLayers);\r\n      // For the initial load, we'll load all of the data\r\n      gl.texSubImage3D(gl.TEXTURE_3D, 0, 0, 0, 0, maxT3DTexels, maxT3DTexels, depthLayers, gl.RED_INTEGER, gl.UNSIGNED_INT, svdag.nodes);\r\n\r\n      // gl.texImage3D(gl.TEXTURE_3D, 0, gl.R32UI, maxT3DTexels, maxT3DTexels, depthLayers, 0, gl.RED_INTEGER, gl.UNSIGNED_INT, svdag.nodes);\r\n    } else {\r\n      // For following chunks of data, upload one or more Z slices of the 3D texture\r\n      // TODO: Also take into account the yOffset - may need two texSubImage3D calls\r\n      const xOffset = 0;\r\n      const yOffset = 0; // Math.floor(chunkStart / maxT3DTexels) % maxT3DTexels;\r\n      const zOffset = Math.floor(chunkStart / maxT3DTexelsPow2);\r\n\r\n      const chunkStartZ = zOffset;\r\n      const chunkEndZ = Math.floor((svdag.dataLoadedOffset / 4) / maxT3DTexelsPow2);\r\n\r\n      const updateWidth = maxT3DTexels;\r\n      const updateHeight = maxT3DTexels; // Math.ceil(svdag.dataLoadedOffset / maxT3DTexels) % maxT3DTexels - yOffset;\r\n      const updateDepth = (chunkEndZ - chunkStartZ) + 1;\r\n\r\n      const newNodes = svdag.nodes.slice(\r\n        yOffset * maxT3DTexels + chunkStartZ * maxT3DTexelsPow2,\r\n        maxT3DTexels + updateHeight * maxT3DTexels + chunkEndZ * maxT3DTexelsPow2,\r\n      );\r\n\r\n      const progressPct = Math.round((svdag.dataLoadedOffset / 4) / svdag.originalNodeLength * 100);\r\n      console.log(`Uploading data to 3D texture (${svdag.dataLoadedOffset / 4}/${svdag.originalNodeLength} [${progressPct}%])...`);\r\n      console.log('#layers', depthLayers, 'start', zOffset, 'chunkStart', chunkStart, 'newNodes', nNewNodes, 'end', chunkEndZ, 'depth', updateDepth)\r\n      gl.texSubImage3D(gl.TEXTURE_3D, 0, xOffset, yOffset, zOffset, updateWidth, updateHeight, updateDepth, gl.RED_INTEGER, gl.UNSIGNED_INT, newNodes);\r\n    }\r\n  }\r\n}","import { vec3, mat4, vec2, glMatrix } from \"gl-matrix\";\r\nimport Camera from \"./Camera\";\r\n\r\ninterface IKeyDownStatus {\r\n  [key: string]: boolean;\r\n}\r\n\r\nexport class OrbitController {\r\n\r\n  radius: number;\r\n\r\n  keyDownStatus: IKeyDownStatus;\r\n  numTouches: number; // amount of touches for touchscreens\r\n\r\n  prevMousePos: vec2 = vec2.create();\r\n  mousePos: vec2 = vec2.create();\r\n\r\n  // cached variable that can be reused in between update calls to store the movement direction into\r\n  tmpDir: vec3 = vec3.create();\r\n\r\n  constructor(\r\n    public camera: Camera,\r\n    public moveSpeed: number,\r\n  ) {\r\n    this.keyDownStatus = {};\r\n    this.radius = vec3.dist(this.camera.position, this.camera.target);\r\n\r\n    vec3.normalize(\r\n      this.tmpDir, \r\n      vec3.sub(this.tmpDir, this.camera.target, this.camera.position));\r\n  }\r\n\r\n  init() {\r\n    this.radius = vec3.dist(this.camera.position, this.camera.target);\r\n\r\n    vec3.normalize(\r\n      this.tmpDir, \r\n      vec3.sub(this.tmpDir, this.camera.target, this.camera.position));\r\n  }\r\n\r\n  update(dt: number) {\r\n    let updated = false;\r\n\r\n    if (this.keyDownStatus['shift']) {\r\n      dt *= 10;\r\n    }\r\n\r\n    const tmpKeyDir = vec3.create();\r\n    // tmpKeyDir.set(this.tmpDir);\r\n\r\n    if (this.keyDownStatus['w'] || this.numTouches === 2) { // move forward with 2 fingers\r\n      updated = true;\r\n      vec3.normalize(\r\n        tmpKeyDir, \r\n        vec3.sub(tmpKeyDir, this.camera.target, this.camera.position));\r\n      this.moveInDirection(tmpKeyDir, this.moveSpeed * dt);\r\n    } \r\n    if (this.keyDownStatus['s']) {\r\n      updated = true;\r\n      vec3.normalize(\r\n        tmpKeyDir, \r\n        vec3.sub(tmpKeyDir, this.camera.target, this.camera.position));\r\n        this.moveInDirection(tmpKeyDir, -this.moveSpeed * dt);\r\n    }\r\n    \r\n    if (this.keyDownStatus['a']) {\r\n      updated = true;\r\n      vec3.cross(tmpKeyDir,\r\n        vec3.normalize(\r\n          tmpKeyDir, \r\n          vec3.sub(tmpKeyDir, this.camera.position, this.camera.target)),\r\n        this.camera.upDir);\r\n        this.moveInDirection(tmpKeyDir, this.moveSpeed * dt);\r\n    }\r\n    if (this.keyDownStatus['d']) {\r\n      updated = true;\r\n      vec3.cross(tmpKeyDir,\r\n        vec3.normalize(\r\n          tmpKeyDir, \r\n          vec3.sub(tmpKeyDir, this.camera.position, this.camera.target)),\r\n        this.camera.upDir);\r\n        this.moveInDirection(tmpKeyDir, -this.moveSpeed * dt);\r\n    }\r\n\r\n    if (this.keyDownStatus['q']) {\r\n      updated = true;\r\n      vec3.normalize(\r\n        tmpKeyDir, \r\n        vec3.sub(tmpKeyDir, this.camera.target, this.camera.position));\r\n      this.rotateAlongLocalY(0.5, dt);\r\n    }\r\n    if (this.keyDownStatus['e']) {\r\n      updated = true;\r\n      vec3.normalize(\r\n        tmpKeyDir, \r\n        vec3.sub(tmpKeyDir, this.camera.target, this.camera.position));\r\n      this.rotateAlongLocalY(0.5, -dt);\r\n    }\r\n\r\n    if (this.keyDownStatus['mouse-0']) {\r\n      updated = true;\r\n      const delta = vec2.subtract(vec2.create(), this.prevMousePos, this.mousePos);\r\n      vec2.divide(delta, delta, [document.documentElement.clientWidth, document.documentElement.clientHeight]);\r\n\r\n      const lookSpeed = 5;\r\n\r\n      this.rotateAlongLocalY(delta[0], lookSpeed);\r\n      this.rotateAlongLocalX(delta[1], -lookSpeed);\r\n    }\r\n\r\n    if (updated) {\r\n      this.camera.updateMatrices();\r\n    }\r\n    this.prevMousePos.set(this.mousePos);\r\n  }\r\n\r\n  moveInDirection(dir: vec3, speed: number) {\r\n    vec3.scaleAndAdd(this.camera.position, this.camera.position, dir, speed);\r\n    vec3.scaleAndAdd(this.camera.target, this.camera.target, dir, speed);\r\n  }\r\n\r\n  rotateAlongLocalY(amount: number, speed: number) {\r\n    const mat = mat4.rotate(mat4.create(), mat4.identity(mat4.create()), amount * speed, this.camera.upDir);\r\n    vec3.transformMat4(this.tmpDir, this.tmpDir, mat);\r\n    vec3.scaleAndAdd(this.camera.target, this.camera.position, this.tmpDir, this.radius);\r\n  }\r\n\r\n  rotateAlongLocalX(amount: number, speed: number) {\r\n    const forward = vec3.subtract(vec3.create(), this.camera.target, this.camera.position);\r\n    vec3.normalize(forward, forward);\r\n\r\n    const localX = vec3.create();\r\n    vec3.cross(localX, this.camera.upDir, forward);\r\n\r\n    const mat = mat4.create();\r\n    mat4.rotate(mat, mat4.identity(mat), amount * speed, localX);\r\n    vec3.transformMat4(this.tmpDir, this.tmpDir, mat);\r\n    vec3.scaleAndAdd(this.camera.target, this.camera.position, this.tmpDir, this.radius);\r\n  }\r\n\r\n  rotateAroundPivot(dir: vec2) {\r\n    \r\n  }\r\n\r\n  onKeyDown(e: KeyboardEvent) {\r\n    this.keyDownStatus[e.key.toLocaleLowerCase()] = true;\r\n  }\r\n\r\n  onKeyUp(e: KeyboardEvent) {\r\n    this.keyDownStatus[e.key.toLocaleLowerCase()] = false;\r\n  }\r\n\r\n  onMouseDown(e: MouseEvent) {\r\n    this.keyDownStatus[`mouse-${e.button}`] = true;\r\n    this.prevMousePos.set([e.clientX, e.clientY]);\r\n    this.mousePos.set(this.prevMousePos);\r\n  }\r\n  onTouchStart(e: TouchEvent) {\r\n    this.keyDownStatus[`mouse-0`] = true;\r\n    this.prevMousePos.set([e.touches[0].clientX, e.touches[0].clientY]);\r\n    this.mousePos.set(this.prevMousePos);\r\n    this.numTouches = e.touches.length;\r\n  }\r\n  \r\n  onMouseUp(e: MouseEvent) {\r\n    this.keyDownStatus[`mouse-${e.button}`] = false;\r\n  }\r\n  onTouchEnd(e: TouchEvent) {\r\n    this.keyDownStatus[`mouse-0`] = false;\r\n    this.numTouches = 0;\r\n  }\r\n\r\n  onMouseMove(e: MouseEvent) {\r\n    this.mousePos.set(vec2.fromValues(e.clientX, e.clientY));\r\n  }\r\n  onTouchMove(e: TouchEvent) {\r\n    this.mousePos.set(vec2.fromValues(e.touches[0].clientX, e.touches[0].clientY));\r\n    this.numTouches = e.touches.length;\r\n  }\r\n\r\n  onMouseWheel(e: WheelEvent) {\r\n    // TODO: Need proper 2 way binding from ui and state\r\n    (window as any).setMoveSpeed(this.moveSpeed *= e.deltaY < 0 ? 1.1 : 0.9);\r\n  }\r\n}\r\n\r\nexport default OrbitController;\r\n","import { SVDAG } from \"./SVDAG\";\r\nimport { vec3 } from \"gl-matrix\";\r\nimport { RenderMode } from \"./Renderer\";\r\n\r\nexport type PreloadedSceneOption = {\r\n  label: string;\r\n  loadType: 'preloaded';\r\n  getScene: (svdag: SVDAG) => Promise<SVDAG>;\r\n}\r\n\r\nexport type LoadableSceneOption = {\r\n  label: string;\r\n  loadType: 'stream' | 'fetch';\r\n  downloadPath: string;\r\n}\r\n\r\nexport type SceneOption = PreloadedSceneOption | LoadableSceneOption;\r\n\r\ntype SceneFile = {\r\n  fileName: string;\r\n  absolutePath: string;\r\n  size: string;\r\n}\r\n\r\nexport default class SceneProvider {\r\n  static async getGeneratedSceneList() {\r\n    const generatedSceneOptions: SceneOption[] = [\r\n      {\r\n        label: 'Cube fractal',\r\n        getScene: async (svdag) => SceneProvider.generateCubeFractal(svdag),\r\n        loadType: 'preloaded',\r\n      },\r\n      {\r\n        label: 'Pyramid fractal',\r\n        getScene: async (svdag) => SceneProvider.generatePyramidFractal(svdag),\r\n        loadType: 'preloaded',\r\n      }, \r\n    ];\r\n    return generatedSceneOptions;\r\n  }\r\n  static async getPrebuiltSceneList(): Promise<SceneOption[]> {\r\n    try {\r\n      const prebuiltScenes = await SceneProvider.fetchPrebuiltScenes();\r\n      return prebuiltScenes.map<SceneOption>(f => ({\r\n        label: `${f.fileName} (${f.size})`,\r\n        downloadPath: f.absolutePath,\r\n        loadType: 'stream', // todo: if size is small, maybe use fetch loadType\r\n      }));\r\n    } catch (e) {\r\n      console.error('Could not fetch prebuilt scenes :(', e);\r\n      return [];\r\n    }\r\n  }\r\n\r\n  static async fetchPrebuiltScenes() {\r\n    // Needs to be https\r\n    const hostUrl = `https://allaboutsteinsgate.info/dev/dagger/scenes/`;\r\n    // sort by name\r\n    const res = await fetch(`${hostUrl}?C=N;O=A`);\r\n    const pageString = await res.text();\r\n    const doc = new DOMParser().parseFromString(pageString, 'text/html');\r\n\r\n    // Apache index structure is a table has rows with 'Name' and 'Size'.\r\n    return Array.from(doc.querySelectorAll('tr'))\r\n      // The first three and last row are headers or seperators or a parent link\r\n      .slice(3, -1)\r\n      .map((row: HTMLTableRowElement): SceneFile => ({\r\n        fileName: (row.childNodes[1] as HTMLTableDataCellElement).innerText.trim().replace('.svdag', ''),\r\n        absolutePath: `${hostUrl}${row.querySelector('a').href.split('/').pop()}`,\r\n        size: (row.childNodes[3] as HTMLTableDataCellElement).innerText,\r\n      }));\r\n  }\r\n\r\n  private static generateBaseFractal(svdag: SVDAG, nNodes: number, nodeData: Uint32Array) {\r\n     svdag.bboxStart.set([0, 0, 0]);\r\n     svdag.bboxEnd.set([100, 100, 100]);\r\n     vec3.sub(svdag.bboxCenter, svdag.bboxEnd, svdag.bboxStart);\r\n     vec3.scaleAndAdd(svdag.bboxCenter, svdag.bboxStart, svdag.bboxCenter, 0.5);\r\n     svdag.rootSide = 100;\r\n \r\n     svdag.nLevels = 20; // could be infinite, but this affects the size of the renderer stack\r\n     svdag.nNodes = nNodes;\r\n     svdag.nodes = nodeData;\r\n     return svdag;\r\n  }\r\n\r\n  static generatePyramidFractal(svdag: SVDAG): SVDAG {\r\n    svdag.renderPreferences = {\r\n      renderMode: RenderMode.ITERATIONS,\r\n      maxIterations: 100,\r\n      spawnPosition: vec3.fromValues(125, 125, 125),\r\n    };\r\n\r\n    // We'll generate a recursive fractal here:\r\n    // - Level 0: A root node with 4 child pointers, all pointing back to the root\r\n\r\n    return SceneProvider.generateBaseFractal(\r\n      svdag,\r\n      1,\r\n      new Uint32Array([\r\n        // child pointers at index 0, 1, 2 and 4\r\n        0b11101000,\r\n        // 4 pointers, all pointing to index 0 (the root node)\r\n        0, 0, 0, 0,\r\n    ]));\r\n  }\r\n\r\n  static generateCubeFractal(svdag: SVDAG): SVDAG {\r\n    svdag.renderPreferences = {\r\n      renderMode: RenderMode.DIFFUSE_LIGHTING,\r\n      maxIterations: 30,\r\n      spawnPosition: vec3.fromValues(150, 150, 150),\r\n    };\r\n\r\n    // A cube fractal is a bit more complex, we need more than 1 node\r\n    // - Level 0: A root node with 8 child pointers, pointing to the same node\r\n    // - Level 1: A node where all but 1 child pointer are set, all pointing back to the root\r\n\r\n    return SceneProvider.generateBaseFractal(\r\n      svdag,\r\n      2,\r\n      new Uint32Array([\r\n        // all child pointers set\r\n        0b11111111,\r\n        // 8 pointers, all pointing to index 9 (the node at level 1)\r\n        9, 9, 9, 9, 9, 9, 9, 9,\r\n        // a node with 7 pointer pointing back to the root node\r\n        0b01111111,\r\n        0, 0, 0, 0, 0, 0, 0\r\n    ]));\r\n  }\r\n}","import { SVDAG } from \"./SVDAG\";\r\nimport { vec3 } from \"gl-matrix\";\r\nimport Camera from \"./Camera\";\r\nimport Renderer, { RenderMode } from \"./Renderer\";\r\nimport OrbitController from \"./OrbitController\";\r\nimport SceneProvider, { SceneOption } from \"./SceneProvider\";\r\n\r\nconst MAX_DRAW_LEVEL = 20;\r\n\r\nlet canvas: HTMLCanvasElement;\r\nlet controller: OrbitController;\r\nlet scene: SVDAG;\r\n\r\nconst sceneList: SceneOption[] = [];\r\n\r\nconst camera = new Camera();\r\nlet renderer: Renderer;\r\n\r\nconst win = window as any;\r\n\r\nlet fpsCountTime = Date.now();\r\nlet fpsCount = 0;\r\nlet latestFps = 1;\r\nlet lastFrameTime = Date.now();\r\n\r\n// UI handlers\r\nfunction setRenderScale(num: number) {\r\n  renderer.state.renderScale = num;\r\n  canvas.width  = window.innerWidth * renderer.state.renderScale;\r\n  canvas.height = window.innerHeight * renderer.state.renderScale;\r\n  canvas.style.transform = `translate(-50%, -50%) scale(${1/renderer.state.renderScale})`;\r\n  (document.getElementById('renderScale') as HTMLInputElement).value = `${renderer.state.renderScale}`;\r\n}\r\nwin.setRenderScale = setRenderScale.bind(this);\r\n\r\nfunction setDrawLevel(num: number) {\r\n  renderer.state.drawLevel = Math.max(1, Math.min(num, MAX_DRAW_LEVEL));\r\n  (document.getElementById('drawLevel') as HTMLInputElement).value = `${renderer.state.drawLevel}`;\r\n}\r\nwin.setDrawLevel = setDrawLevel.bind(this);\r\n\r\nfunction setRenderMode(num: RenderMode | string) {\r\n  console.log('setting render mode', num)\r\n  renderer.state.renderMode = typeof num === 'string' ? parseInt(num, 10) : num;\r\n  (document.getElementById('renderMode') as HTMLInputElement).value = `${renderer.state.renderMode}`;\r\n}\r\nwin.setRenderMode = setRenderMode.bind(this);\r\n\r\nfunction setMoveSpeed(num: number | string) {\r\n  controller.moveSpeed = typeof num === 'number' ? num : parseFloat(num);\r\n  (document.getElementById('moveSpeed') as HTMLInputElement).value = controller.moveSpeed.toFixed(1);\r\n}\r\nwin.setMoveSpeed = setMoveSpeed.bind(this);\r\n\r\nfunction setMaxIterations(num: number) {\r\n  renderer.state.maxIterations = Math.max(1, Math.min(num, 1000));\r\n  (document.getElementById('maxIterations') as HTMLInputElement).value = renderer.state.maxIterations.toFixed(0);\r\n}\r\nwin.setMaxIterations = setMaxIterations.bind(this);\r\n\r\nfunction setPixelTolerance(num: number | string) {\r\n  renderer.state.pixelTolerance = typeof num === 'number' ? num : parseFloat(num);\r\n  (document.getElementById('pixelTolerance') as HTMLInputElement).value = renderer.state.pixelTolerance.toFixed(2);\r\n}\r\nwin.setPixelTolerance = setPixelTolerance.bind(this);\r\n\r\nfunction setShowUniqueColors(val: boolean) {\r\n  renderer.state.showUniqueNodeColors = val;\r\n}\r\nwin.setShowUniqueColors = setShowUniqueColors.bind(this);\r\n\r\nfunction setUseBeamOptimization(val: boolean, disable?: boolean) {\r\n  renderer.state.useBeamOptimization = val;\r\n\r\n  if (disable) {\r\n    const checkbox = (document.getElementById('beamOptim') as HTMLInputElement);\r\n    checkbox.checked = val;\r\n    checkbox.disabled = true;\r\n  }\r\n}\r\nwin.setUseBeamOptimization = setUseBeamOptimization.bind(this);\r\n\r\n// SCENE LOADING\r\n/////////////////\r\nasync function loadSceneStream(downloadPath: string) {\r\n  console.log('Streaming', downloadPath, '...');\r\n  const response = await fetch(downloadPath);\r\n  const reader = response.body.getReader();\r\n\r\n  // Load header before continuing\r\n  const { done, value } = await reader.read();\r\n\r\n  const svdag = new SVDAG();\r\n  renderer.initScene(svdag);\r\n  svdag.loadChunk(value);\r\n\r\n  // Upload all data the first time (filled with max_int -1)\r\n  renderer.uploadTexData(svdag.dataLoadedOffset / 4);\r\n\r\n  let progressPct = Math.round((svdag.dataLoadedOffset / 4) / svdag.originalNodeLength * 100);\r\n  const loadButton = document.getElementById('load') as HTMLButtonElement;\r\n  loadButton.disabled = true;\r\n  loadButton.innerText = `Load (${progressPct}%)`;\r\n  \r\n  const loadNodesPromise = async () => {\r\n    // Keep track of when the last data upload to GPU was done, to throttle it a bit\r\n    let lastUpload = new Date();\r\n    let lastUploadIndex = svdag.dataLoadedOffset;\r\n\r\n    while (true) {\r\n      const { done, value } = await reader.read();\r\n      if (done) {\r\n        break;\r\n      }\r\n      console.log(`Received ${value.byteLength} bytes (${value.length / 1000000} MB)`);\r\n\r\n      // Load in SVDAG in RAM\r\n      svdag.loadChunk(value);\r\n\r\n      progressPct = Math.round((svdag.dataLoadedOffset / 4) / svdag.originalNodeLength * 100);\r\n      loadButton.innerText = `Load (${progressPct}%)`;\r\n  \r\n      // Upload to GPU x milliseconds\r\n      // TODO: Improve streaming performance we can upload every time\r\n      const d = new Date();\r\n      if (d.getTime() - lastUpload.getTime() > 1000) {\r\n        renderer.uploadTexData((svdag.dataLoadedOffset - lastUploadIndex) / 4);\r\n        lastUploadIndex = svdag.dataLoadedOffset;\r\n        lastUpload = d;\r\n      }\r\n    }\r\n\r\n    // Final upload\r\n    renderer.uploadTexData((svdag.dataLoadedOffset - lastUploadIndex) / 4);\r\n    // uploadTexData(svdag, svdag.dataLoadedOffset);\r\n    return;\r\n  };\r\n\r\n  const finish = () => {\r\n    console.log('Finished loading!');\r\n    loadButton.innerText = 'Load';\r\n    loadButton.disabled = false;\r\n  }\r\n\r\n  if (done || progressPct >= 99) {\r\n    finish();\r\n  } else {\r\n    loadNodesPromise().then(finish);\r\n  }\r\n  return svdag;\r\n}\r\n\r\n\r\nexport async function loadScene(sceneOption: SceneOption) {\r\n  console.log(`Loading \"${sceneOption.label}\" (${sceneOption.loadType})...`);\r\n\r\n  let svdag;\r\n\r\n  if (sceneOption.loadType === 'stream') {\r\n    // Option 1: Progressively upload to GPU as every chunk of the file is fetched \r\n    // TODO: Web worker\r\n    svdag = await loadSceneStream(sceneOption.downloadPath);\r\n  } else if (sceneOption.loadType === 'fetch') { \r\n    // Option 2: Wait until file is completely fetched before uploading to GPU memory\r\n    svdag = new SVDAG();\r\n    renderer.initScene(svdag);\r\n    const response = await fetch(sceneOption.downloadPath);\r\n    svdag.load(await response.arrayBuffer());\r\n    svdag.dataLoadedOffset = svdag.nNodes * 4;\r\n    renderer.uploadTexData(svdag.nNodes);\r\n    svdag.renderPreferences.maxIterations = 250;\r\n  } else if (sceneOption.loadType === 'preloaded') {\r\n    // Option 3: Preloaded data (currently used for generated SVDAGs)\r\n    svdag = new SVDAG();\r\n    renderer.initScene(svdag);\r\n    sceneOption.getScene(svdag);\r\n    svdag.originalNodeLength = svdag.nodes.length;\r\n    svdag.dataLoadedOffset = svdag.nNodes * 4;\r\n    svdag.initialized = true; // header should already be loaded for preloaded scenes\r\n    renderer.uploadTexData(svdag.nNodes);\r\n    svdag.renderPreferences.maxIterations = 250;\r\n  }\r\n\r\n  if (svdag.renderPreferences.renderMode !== undefined) setRenderMode(svdag.renderPreferences.renderMode);\r\n  if (svdag.renderPreferences.maxIterations) setMaxIterations(svdag.renderPreferences.maxIterations);\r\n  if (svdag.renderPreferences.moveSpeed) setMoveSpeed(svdag.renderPreferences.moveSpeed);\r\n  if (svdag.renderPreferences.spawnPosition) camera.position = svdag.renderPreferences.spawnPosition;\r\n\r\n  console.log('Loaded!');\r\n  console.log(`Levels: ${svdag.nLevels}, nodes: ${svdag.nNodes}`);\r\n  console.log(`Bbox:\\n\\t[${svdag.bboxStart}]\\n\\t[${svdag.bboxEnd}]\\n\\t(center: [${svdag.bboxCenter}])`);\r\n\r\n  return svdag;\r\n}\r\n\r\nasync function loadSelectedScene() {\r\n  if (sceneList.length === 0) throw new Error('No scenes available!');\r\n\r\n  const selector = document.getElementById('sceneSelector') as HTMLSelectElement;\r\n  const selectedSceneIndex = parseInt(selector.options[selector.selectedIndex].value) || 0;\r\n\r\n  // Dispose current scene first\r\n  renderer.deleteNodesTexture();\r\n\r\n  // TODO: Should add a version number to the SVDAG file header\r\n  // TODO: In theory, you could only host the highest res, and just do a partial load \r\n\r\n  // Need to recompile the frag shader, since it relies on #defines for the max # levels\r\n  // TODO: hacky fix: set the drawLevel to 20 for every scene \r\n  // gl.detachShader(program, fragShader);\r\n  // gl.deleteShader(fragShader);\r\n  // fragShader\r\n\r\n  const oldBboxCenter = scene?.bboxCenter || vec3.create();\r\n\r\n  renderer.createNodesTexture();\r\n  console.log(selectedSceneIndex, sceneList)\r\n  scene = await loadScene(sceneList[selectedSceneIndex]);\r\n\r\n  setDrawLevel(scene.nLevels);\r\n\r\n  // If the bbox center is different, it's probably a new scene, so reset camera\r\n  if (vec3.dist(oldBboxCenter, scene.bboxCenter) > 0.001 || scene.renderPreferences.spawnPosition) {\r\n    if (!scene.renderPreferences.spawnPosition) {\r\n      camera.position.set(scene.bboxEnd);\r\n    }\r\n    camera.target.set(scene.bboxCenter);\r\n    setMoveSpeed(vec3.distance(scene.bboxStart, scene.bboxEnd) * 0.01);\r\n  }\r\n  camera.updateMatrices();\r\n  controller.init();\r\n}\r\nwin.loadSelectedScene = loadSelectedScene.bind(this);\r\n\r\n\r\n// Main render function - updates things every frame and calls the SVDAG renderer.render\r\nfunction render() {\r\n  if (Date.now() > fpsCountTime + 1000) {\r\n    fpsCountTime = Date.now();\r\n    document.title = `DAGger - ${fpsCount} FPS`;\r\n    latestFps = fpsCount;\r\n    fpsCount = 0;\r\n\r\n    // console.log('Voxel at cam pos: ', scene.getVoxel(camera.position));\r\n  }\r\n  fpsCount++;\r\n\r\n  // TODO: Move CPU ray casting to update func\r\n  // const hit = scene.castRay(camera.position, vec3.fromValues(0, -1, 0), 100);\r\n\r\n  // const linearGravity = scene.rootSide / 1000;\r\n  // const delta = vec3.fromValues(0, 0, 0);\r\n  // if (!hit) {\r\n  //   delta[1] = -linearGravity;\r\n  // } else {\r\n  //   const dist = vec3.dist(hit.hitPos, camera.position);\r\n  //   console.log(dist, hit.maxRayLength)\r\n  //   if (dist < 0.8 * hit.maxRayLength) {\r\n  //     delta[1] = 1000 / dist;\r\n  //   }\r\n  // }\r\n  // // const delta = vec3.sub(vec3.create(), hit.hitPos, camera.position);\r\n  // vec3.add(camera.position, camera.position, delta);\r\n  // vec3.add(camera.target, camera.target, delta);\r\n  // camera.updateMatrices();\r\n\r\n  // Process input\r\n  const dt = 0.001 * (Date.now() - lastFrameTime);\r\n  lastFrameTime = Date.now();\r\n  controller.update(dt);\r\n\r\n  renderer.render();\r\n\r\n  // Request rerender\r\n  requestAnimationFrame(render);\r\n}\r\n\r\nasync function init() {\r\n  canvas = document.querySelector(\"#glCanvas\");\r\n  const gl = canvas.getContext(\"webgl2\") as WebGL2RenderingContext;\r\n  renderer = new Renderer(camera, canvas);\r\n  setRenderScale(renderer.state.renderScale);\r\n\r\n  // Only continue if WebGL is available and working\r\n  if (gl === null) {\r\n    alert(\"Unable to initialize WebGL. Your browser or machine may not support it.\");\r\n    return;\r\n  }\r\n\r\n  console.log(gl.getParameter(gl.VERSION), gl.getParameter(gl.SHADING_LANGUAGE_VERSION), gl.getParameter(gl.VENDOR));\r\n  console.log('Supported extensions:', gl.getSupportedExtensions());\r\n\r\n  const maxT3DTexels = gl.getParameter(gl.MAX_3D_TEXTURE_SIZE);\r\n\r\n  const maxNodes = Math.floor(Math.pow(maxT3DTexels, 3) / 5); // average of 4 pointers per node + 1 header texel (32 bit texels)\r\n  console.log(`Max 3D tex = ${maxT3DTexels}. Max avg. nodes ~= ${maxNodes} = ${Math.round(maxNodes / 1e6)} MNodes`);\r\n\r\n  const colorExt: WEBGL_color_buffer_float = gl.getExtension('EXT_color_buffer_float');\r\n  if (!colorExt) {\r\n    console.error('The the EXT_color_buffer_float extension is not available - some features might not work');\r\n    (window as any).setUseBeamOptimization(false, true); // TODO: Proper UI controller\r\n    return;\r\n  }\r\n\r\n  gl.clear(gl.COLOR_BUFFER_BIT);\r\n\r\n  // Load available scenes\r\n  sceneList.push(...(await SceneProvider.getGeneratedSceneList()));\r\n  const sceneSelector: HTMLSelectElement = document.querySelector('#sceneSelector');\r\n  const addSceneToUI = (item: SceneOption, index: number) => {\r\n    const opt = document.createElement('option');\r\n    opt.value = `${index}`;\r\n    opt.innerText = item.label;\r\n    sceneSelector.appendChild(opt);\r\n  }\r\n  sceneList.forEach(addSceneToUI);\r\n\r\n  // Fetch pre-built scenes async so we don't have to wait for the request\r\n  SceneProvider.getPrebuiltSceneList().then(scenes => {\r\n    sceneList.push(...scenes);\r\n    sceneSelector.innerHTML = '';\r\n    sceneList.forEach(addSceneToUI);\r\n  });\r\n  \r\n  controller = new OrbitController(camera, 1);\r\n\r\n  // TODO: Many of these things can be done in parallel instead of awaiting each.\r\n\r\n  await loadSelectedScene();\r\n  controller.init();\r\n\r\n  // Load the program & shaders\r\n  await renderer.initShaders();\r\n  // Set up FBOs and textures\r\n  renderer.initialize();\r\n  // Set up dicts of uniform locations for each shader program\r\n  renderer.initUniforms();\r\n  // Set the initial uniforms for the active shader program\r\n  renderer.setInitialUniforms(renderer.viewerUniformDict);\r\n  \r\n  // We don't have any vertex attrs, but webgl complains if we don't enable at least one (doesn't work for some reason)\r\n  // const buf = gl.createBuffer();\r\n  // gl.bindBuffer(gl.ARRAY_BUFFER, buf);\r\n  // gl.bufferData(gl.ARRAY_BUFFER, new Float32Array([0]), gl.STATIC_DRAW);\r\n  // gl.vertexAttribPointer(0, 1, gl.FLOAT, false, 0, 0);\r\n  // gl.enableVertexAttribArray(0);\r\n  // gl.bindAttribLocation()\r\n  \r\n  gl.disable(gl.DEPTH_TEST);\r\n  \r\n  canvas.tabIndex = 0;\r\n  canvas.addEventListener('keydown', controller.onKeyDown.bind(controller));\r\n  canvas.addEventListener('keyup', controller.onKeyUp.bind(controller));\r\n  canvas.addEventListener('mousedown', controller.onMouseDown.bind(controller));\r\n  canvas.addEventListener('mouseup', controller.onMouseUp.bind(controller));\r\n  canvas.addEventListener('mousemove', controller.onMouseMove.bind(controller));\r\n  canvas.addEventListener('wheel', controller.onMouseWheel.bind(controller));\r\n  canvas.oncontextmenu = () => false;\r\n\r\n  // Mobile\r\n  canvas.addEventListener('touchstart', controller.onTouchStart.bind(controller));\r\n  canvas.addEventListener('touchend', controller.onTouchEnd.bind(controller));\r\n  canvas.addEventListener('touchmove', controller.onTouchMove.bind(controller));\r\n\r\n  // \"main\" key event listener\r\n  canvas.addEventListener('keydown', (e) => {\r\n    if (e.key === '1') {\r\n      setDrawLevel(renderer.state.drawLevel - 1);\r\n    } else if (e.key === '2') {\r\n      setDrawLevel(renderer.state.drawLevel + 1);\r\n    }\r\n  });\r\n\r\n  // Automatically lower the render scale to half res when fps is low after 1.5 sec\r\n  setTimeout(() => {\r\n    if (latestFps < 15) {\r\n      setRenderScale(0.25);\r\n    } else if (latestFps < 30) {\r\n      setRenderScale(0.5);\r\n    } else if (latestFps < 45) {\r\n      setRenderScale(0.75);\r\n    }\r\n  }, 2500);\r\n\r\n  // Start render loop\r\n  // TODO: Only rerender when input changes\r\n  // TODO: Beam optimization (coarse pre-render to avoid tracing empty space in front of camera for all pixels)\r\n  // TODO: Re-use previous frame for path tracing\r\n  render();\r\n}\r\n\r\nwindow.addEventListener('load', init);\r\n"],"sourceRoot":""}